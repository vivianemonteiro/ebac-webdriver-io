"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("source-map-support/register");

var _wd = _interopRequireDefault(require("wd"));

var _ = require("../..");

var _chaiAsPromised = _interopRequireDefault(require("chai-as-promised"));

var _chai = _interopRequireDefault(require("chai"));

var _nodeSimctl = _interopRequireDefault(require("node-simctl"));

var _utils = require("../utils");

_chai.default.should();

_chai.default.use(_chaiAsPromised.default);

const PLATFORM_VERSION = process.env.PLATFORM_VERSION || '14.1';
const DEVICE_NAME = process.env.DEVICE_NAME || 'iPhone 11 Pro Max';
const CAPS = {
  browserName: 'AppiumSafari',
  platformName: 'ios',
  'safari:useSimulator': true,
  'safari:platformVersion': PLATFORM_VERSION,
  'safari:deviceName': DEVICE_NAME
};
describe('Mobile SafariDriver', function () {
  this.timeout(_utils.MOCHA_TIMEOUT);
  let server;
  let driver;
  before(async function () {
    if (process.env.CI) {
      return this.skip();
    }

    const simctl = new _nodeSimctl.default();
    const allDevices = await simctl.getDevices(PLATFORM_VERSION, 'iOS');
    const device = allDevices.find(({
      name
    }) => name === DEVICE_NAME);

    if (!device) {
      throw new Error(`Cannot find '${DEVICE_NAME}' Simulator (${PLATFORM_VERSION})`);
    }

    if (device.state !== 'Booted') {
      simctl.udid = device.udid;
      await simctl.bootDevice();
      await simctl.startBootMonitor();
    }

    server = await (0, _.startServer)(_utils.PORT, _utils.HOST);
  });
  after(async function () {
    if (server) {
      await server.close();
      server = null;
    }
  });
  beforeEach(async function () {
    driver = _wd.default.promiseChainRemote(_utils.HOST, _utils.PORT);
    await driver.init(CAPS);
  });
  afterEach(async function () {
    if (driver) {
      await driver.quit();
      driver = null;
    }
  });
  it('should start and stop a session', async function () {
    await driver.get('https://appium.io/');
    const button = await driver.elementByCss('#downloadLink');
    await button.text().should.eventually.eql('Download Appium');
  });
});require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9tb2JpbGUtZHJpdmVyLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6WyJjaGFpIiwic2hvdWxkIiwidXNlIiwiY2hhaUFzUHJvbWlzZWQiLCJQTEFURk9STV9WRVJTSU9OIiwicHJvY2VzcyIsImVudiIsIkRFVklDRV9OQU1FIiwiQ0FQUyIsImJyb3dzZXJOYW1lIiwicGxhdGZvcm1OYW1lIiwiZGVzY3JpYmUiLCJ0aW1lb3V0IiwiTU9DSEFfVElNRU9VVCIsInNlcnZlciIsImRyaXZlciIsImJlZm9yZSIsIkNJIiwic2tpcCIsInNpbWN0bCIsIlNpbWN0bCIsImFsbERldmljZXMiLCJnZXREZXZpY2VzIiwiZGV2aWNlIiwiZmluZCIsIm5hbWUiLCJFcnJvciIsInN0YXRlIiwidWRpZCIsImJvb3REZXZpY2UiLCJzdGFydEJvb3RNb25pdG9yIiwiUE9SVCIsIkhPU1QiLCJhZnRlciIsImNsb3NlIiwiYmVmb3JlRWFjaCIsIndkIiwicHJvbWlzZUNoYWluUmVtb3RlIiwiaW5pdCIsImFmdGVyRWFjaCIsInF1aXQiLCJpdCIsImdldCIsImJ1dHRvbiIsImVsZW1lbnRCeUNzcyIsInRleHQiLCJldmVudHVhbGx5IiwiZXFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQUEsY0FBS0MsTUFBTDs7QUFDQUQsY0FBS0UsR0FBTCxDQUFTQyx1QkFBVDs7QUFFQSxNQUFNQyxnQkFBZ0IsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLGdCQUFaLElBQWdDLE1BQXpEO0FBQ0EsTUFBTUcsV0FBVyxHQUFHRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBWixJQUEyQixtQkFBL0M7QUFDQSxNQUFNQyxJQUFJLEdBQUc7QUFDWEMsRUFBQUEsV0FBVyxFQUFFLGNBREY7QUFFWEMsRUFBQUEsWUFBWSxFQUFFLEtBRkg7QUFHWCx5QkFBdUIsSUFIWjtBQUlYLDRCQUEwQk4sZ0JBSmY7QUFLWCx1QkFBcUJHO0FBTFYsQ0FBYjtBQVFBSSxRQUFRLENBQUMscUJBQUQsRUFBd0IsWUFBWTtBQUMxQyxPQUFLQyxPQUFMLENBQWFDLG9CQUFiO0FBRUEsTUFBSUMsTUFBSjtBQUNBLE1BQUlDLE1BQUo7QUFDQUMsRUFBQUEsTUFBTSxDQUFDLGtCQUFrQjtBQUN2QixRQUFJWCxPQUFPLENBQUNDLEdBQVIsQ0FBWVcsRUFBaEIsRUFBb0I7QUFJbEIsYUFBTyxLQUFLQyxJQUFMLEVBQVA7QUFDRDs7QUFHRCxVQUFNQyxNQUFNLEdBQUcsSUFBSUMsbUJBQUosRUFBZjtBQUNBLFVBQU1DLFVBQVUsR0FBRyxNQUFNRixNQUFNLENBQUNHLFVBQVAsQ0FBa0JsQixnQkFBbEIsRUFBb0MsS0FBcEMsQ0FBekI7QUFDQSxVQUFNbUIsTUFBTSxHQUFHRixVQUFVLENBQUNHLElBQVgsQ0FBZ0IsQ0FBQztBQUFDQyxNQUFBQTtBQUFELEtBQUQsS0FBWUEsSUFBSSxLQUFLbEIsV0FBckMsQ0FBZjs7QUFDQSxRQUFJLENBQUNnQixNQUFMLEVBQWE7QUFDWCxZQUFNLElBQUlHLEtBQUosQ0FBVyxnQkFBZW5CLFdBQVksZ0JBQWVILGdCQUFpQixHQUF0RSxDQUFOO0FBQ0Q7O0FBQ0QsUUFBSW1CLE1BQU0sQ0FBQ0ksS0FBUCxLQUFpQixRQUFyQixFQUErQjtBQUM3QlIsTUFBQUEsTUFBTSxDQUFDUyxJQUFQLEdBQWNMLE1BQU0sQ0FBQ0ssSUFBckI7QUFDQSxZQUFNVCxNQUFNLENBQUNVLFVBQVAsRUFBTjtBQUNBLFlBQU1WLE1BQU0sQ0FBQ1csZ0JBQVAsRUFBTjtBQUNEOztBQUVEaEIsSUFBQUEsTUFBTSxHQUFHLE1BQU0sbUJBQVlpQixXQUFaLEVBQWtCQyxXQUFsQixDQUFmO0FBQ0QsR0F0QkssQ0FBTjtBQXVCQUMsRUFBQUEsS0FBSyxDQUFDLGtCQUFrQjtBQUN0QixRQUFJbkIsTUFBSixFQUFZO0FBQ1YsWUFBTUEsTUFBTSxDQUFDb0IsS0FBUCxFQUFOO0FBQ0FwQixNQUFBQSxNQUFNLEdBQUcsSUFBVDtBQUNEO0FBQ0YsR0FMSSxDQUFMO0FBTUFxQixFQUFBQSxVQUFVLENBQUMsa0JBQWtCO0FBQzNCcEIsSUFBQUEsTUFBTSxHQUFHcUIsWUFBR0Msa0JBQUgsQ0FBc0JMLFdBQXRCLEVBQTRCRCxXQUE1QixDQUFUO0FBQ0EsVUFBTWhCLE1BQU0sQ0FBQ3VCLElBQVAsQ0FBWTlCLElBQVosQ0FBTjtBQUNELEdBSFMsQ0FBVjtBQUlBK0IsRUFBQUEsU0FBUyxDQUFDLGtCQUFrQjtBQUMxQixRQUFJeEIsTUFBSixFQUFZO0FBQ1YsWUFBTUEsTUFBTSxDQUFDeUIsSUFBUCxFQUFOO0FBQ0F6QixNQUFBQSxNQUFNLEdBQUcsSUFBVDtBQUNEO0FBQ0YsR0FMUSxDQUFUO0FBT0EwQixFQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0Msa0JBQWtCO0FBQ3RELFVBQU0xQixNQUFNLENBQUMyQixHQUFQLENBQVcsb0JBQVgsQ0FBTjtBQUNBLFVBQU1DLE1BQU0sR0FBRyxNQUFNNUIsTUFBTSxDQUFDNkIsWUFBUCxDQUFvQixlQUFwQixDQUFyQjtBQUNBLFVBQU1ELE1BQU0sQ0FBQ0UsSUFBUCxHQUFjNUMsTUFBZCxDQUFxQjZDLFVBQXJCLENBQWdDQyxHQUFoQyxDQUFvQyxpQkFBcEMsQ0FBTjtBQUNELEdBSkMsQ0FBRjtBQUtELENBbERPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgd2QgZnJvbSAnd2QnO1xuaW1wb3J0IHsgc3RhcnRTZXJ2ZXIgfSBmcm9tICcuLi8uLic7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBTaW1jdGwgZnJvbSAnbm9kZS1zaW1jdGwnO1xuaW1wb3J0IHsgSE9TVCwgUE9SVCwgTU9DSEFfVElNRU9VVCB9IGZyb20gJy4uL3V0aWxzJztcblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuY29uc3QgUExBVEZPUk1fVkVSU0lPTiA9IHByb2Nlc3MuZW52LlBMQVRGT1JNX1ZFUlNJT04gfHwgJzE0LjEnO1xuY29uc3QgREVWSUNFX05BTUUgPSBwcm9jZXNzLmVudi5ERVZJQ0VfTkFNRSB8fCAnaVBob25lIDExIFBybyBNYXgnO1xuY29uc3QgQ0FQUyA9IHtcbiAgYnJvd3Nlck5hbWU6ICdBcHBpdW1TYWZhcmknLFxuICBwbGF0Zm9ybU5hbWU6ICdpb3MnLFxuICAnc2FmYXJpOnVzZVNpbXVsYXRvcic6IHRydWUsXG4gICdzYWZhcmk6cGxhdGZvcm1WZXJzaW9uJzogUExBVEZPUk1fVkVSU0lPTixcbiAgJ3NhZmFyaTpkZXZpY2VOYW1lJzogREVWSUNFX05BTUUsXG59O1xuXG5kZXNjcmliZSgnTW9iaWxlIFNhZmFyaURyaXZlcicsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KE1PQ0hBX1RJTUVPVVQpO1xuXG4gIGxldCBzZXJ2ZXI7XG4gIGxldCBkcml2ZXI7XG4gIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52LkNJKSB7XG4gICAgICAvLyBJbiBBenVyZSBDSSB0aGUgc3R1ZmYgdW5leHBlY3RlZGx5IGZhaWxzIHdpdGhcbiAgICAgIC8vIFwiVGhlIGRldmljZSBpcyBub3QgY29uZmlndXJlZCB0byBhbGxvdyByZW1vdGUgY29udHJvbCB2aWEgV2ViRHJpdmVyLiBUbyBmaXggdGhpcywgdG9nZ2xlICdBbGxvdyBSZW1vdGUgQXV0b21hdGlvbicgaW4gU2FmYXJpJ3Mgc2V0dGluZ3MgKFNldHRpbmdzIEFwcCA+IFNhZmFyaSA+IEFkdmFuY2VkKS5cIlxuICAgICAgLy8gZXJyb3JcbiAgICAgIHJldHVybiB0aGlzLnNraXAoKTtcbiAgICB9XG5cbiAgICAvLyBQcmVib290IFNpbXVsYXRvciB0byBhdm9pZCB1bmV4cGVjdGVkIHRpbWVvdXRzXG4gICAgY29uc3Qgc2ltY3RsID0gbmV3IFNpbWN0bCgpO1xuICAgIGNvbnN0IGFsbERldmljZXMgPSBhd2FpdCBzaW1jdGwuZ2V0RGV2aWNlcyhQTEFURk9STV9WRVJTSU9OLCAnaU9TJyk7XG4gICAgY29uc3QgZGV2aWNlID0gYWxsRGV2aWNlcy5maW5kKCh7bmFtZX0pID0+IG5hbWUgPT09IERFVklDRV9OQU1FKTtcbiAgICBpZiAoIWRldmljZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZmluZCAnJHtERVZJQ0VfTkFNRX0nIFNpbXVsYXRvciAoJHtQTEFURk9STV9WRVJTSU9OfSlgKTtcbiAgICB9XG4gICAgaWYgKGRldmljZS5zdGF0ZSAhPT0gJ0Jvb3RlZCcpIHtcbiAgICAgIHNpbWN0bC51ZGlkID0gZGV2aWNlLnVkaWQ7XG4gICAgICBhd2FpdCBzaW1jdGwuYm9vdERldmljZSgpO1xuICAgICAgYXdhaXQgc2ltY3RsLnN0YXJ0Qm9vdE1vbml0b3IoKTtcbiAgICB9XG5cbiAgICBzZXJ2ZXIgPSBhd2FpdCBzdGFydFNlcnZlcihQT1JULCBIT1NUKTtcbiAgfSk7XG4gIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoc2VydmVyKSB7XG4gICAgICBhd2FpdCBzZXJ2ZXIuY2xvc2UoKTtcbiAgICAgIHNlcnZlciA9IG51bGw7XG4gICAgfVxuICB9KTtcbiAgYmVmb3JlRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgZHJpdmVyID0gd2QucHJvbWlzZUNoYWluUmVtb3RlKEhPU1QsIFBPUlQpO1xuICAgIGF3YWl0IGRyaXZlci5pbml0KENBUFMpO1xuICB9KTtcbiAgYWZ0ZXJFYWNoKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoZHJpdmVyKSB7XG4gICAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICAgICAgZHJpdmVyID0gbnVsbDtcbiAgICB9XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgc3RhcnQgYW5kIHN0b3AgYSBzZXNzaW9uJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGF3YWl0IGRyaXZlci5nZXQoJ2h0dHBzOi8vYXBwaXVtLmlvLycpO1xuICAgIGNvbnN0IGJ1dHRvbiA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlDc3MoJyNkb3dubG9hZExpbmsnKTtcbiAgICBhd2FpdCBidXR0b24udGV4dCgpLnNob3VsZC5ldmVudHVhbGx5LmVxbCgnRG93bmxvYWQgQXBwaXVtJyk7XG4gIH0pO1xufSk7XG5cblxuIl0sImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvbW9iaWxlLWRyaXZlci1lMmUtc3BlY3MuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
