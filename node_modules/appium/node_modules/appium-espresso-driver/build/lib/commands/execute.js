"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumBaseDriver = require("appium-base-driver");

let extensions = {};

extensions.executeMobile = async function executeMobile(mobileCommand, opts = {}) {
  const mobileCommandsMapping = {
    shell: 'mobileShell',
    execEmuConsoleCommand: 'mobileExecEmuConsoleCommand',
    performEditorAction: 'mobilePerformEditorAction',
    changePermissions: 'mobileChangePermissions',
    getPermissions: 'mobileGetPermissions',
    startScreenStreaming: 'mobileStartScreenStreaming',
    stopScreenStreaming: 'mobileStopScreenStreaming',
    swipe: 'mobileSwipe',
    scrollToPage: 'mobileScrollToPage',
    navigateTo: 'mobileNavigateTo',
    clickAction: 'mobileClickAction',
    deviceInfo: 'mobileGetDeviceInfo',
    isToastVisible: 'mobileIsToastVisible',
    openDrawer: 'mobileOpenDrawer',
    closeDrawer: 'mobileCloseDrawer',
    setDate: 'mobileSetDate',
    setTime: 'mobileSetTime',
    getDeviceTime: 'mobileGetDeviceTime',
    backdoor: 'mobileBackdoor',
    flashElement: 'mobileFlashElement',
    uiautomator: 'mobileUiautomator',
    uiautomatorPageSource: 'mobileUiautomatorPageSource',
    webAtoms: 'mobileWebAtoms',
    getContexts: 'mobileGetContexts',
    dismissAutofill: 'mobileDismissAutofill',
    getNotifications: 'mobileGetNotifications',
    listSms: 'mobileListSms',
    sensorSet: 'sensorSet',
    deleteFile: 'mobileDeleteFile',
    startService: 'mobileStartService',
    stopService: 'mobileStopService',
    registerIdlingResources: 'mobileRegisterIdlingResources',
    unregisterIdlingResources: 'mobileUnregisterIdlingResources',
    listIdlingResources: 'mobileListIdlingResources'
  };

  if (!_lodash.default.has(mobileCommandsMapping, mobileCommand)) {
    throw new _appiumBaseDriver.errors.UnknownCommandError(`Unknown mobile command "${mobileCommand}". ` + `Only ${_lodash.default.keys(mobileCommandsMapping)} commands are supported.`);
  }

  return await this[mobileCommandsMapping[mobileCommand]](opts);
};

var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9leGVjdXRlLmpzIl0sIm5hbWVzIjpbImV4dGVuc2lvbnMiLCJleGVjdXRlTW9iaWxlIiwibW9iaWxlQ29tbWFuZCIsIm9wdHMiLCJtb2JpbGVDb21tYW5kc01hcHBpbmciLCJzaGVsbCIsImV4ZWNFbXVDb25zb2xlQ29tbWFuZCIsInBlcmZvcm1FZGl0b3JBY3Rpb24iLCJjaGFuZ2VQZXJtaXNzaW9ucyIsImdldFBlcm1pc3Npb25zIiwic3RhcnRTY3JlZW5TdHJlYW1pbmciLCJzdG9wU2NyZWVuU3RyZWFtaW5nIiwic3dpcGUiLCJzY3JvbGxUb1BhZ2UiLCJuYXZpZ2F0ZVRvIiwiY2xpY2tBY3Rpb24iLCJkZXZpY2VJbmZvIiwiaXNUb2FzdFZpc2libGUiLCJvcGVuRHJhd2VyIiwiY2xvc2VEcmF3ZXIiLCJzZXREYXRlIiwic2V0VGltZSIsImdldERldmljZVRpbWUiLCJiYWNrZG9vciIsImZsYXNoRWxlbWVudCIsInVpYXV0b21hdG9yIiwidWlhdXRvbWF0b3JQYWdlU291cmNlIiwid2ViQXRvbXMiLCJnZXRDb250ZXh0cyIsImRpc21pc3NBdXRvZmlsbCIsImdldE5vdGlmaWNhdGlvbnMiLCJsaXN0U21zIiwic2Vuc29yU2V0IiwiZGVsZXRlRmlsZSIsInN0YXJ0U2VydmljZSIsInN0b3BTZXJ2aWNlIiwicmVnaXN0ZXJJZGxpbmdSZXNvdXJjZXMiLCJ1bnJlZ2lzdGVySWRsaW5nUmVzb3VyY2VzIiwibGlzdElkbGluZ1Jlc291cmNlcyIsIl8iLCJoYXMiLCJlcnJvcnMiLCJVbmtub3duQ29tbWFuZEVycm9yIiwia2V5cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxJQUFJQSxVQUFVLEdBQUcsRUFBakI7O0FBRUFBLFVBQVUsQ0FBQ0MsYUFBWCxHQUEyQixlQUFlQSxhQUFmLENBQThCQyxhQUE5QixFQUE2Q0MsSUFBSSxHQUFHLEVBQXBELEVBQXdEO0FBQ2pGLFFBQU1DLHFCQUFxQixHQUFHO0FBQzVCQyxJQUFBQSxLQUFLLEVBQUUsYUFEcUI7QUFHNUJDLElBQUFBLHFCQUFxQixFQUFFLDZCQUhLO0FBSzVCQyxJQUFBQSxtQkFBbUIsRUFBRSwyQkFMTztBQU81QkMsSUFBQUEsaUJBQWlCLEVBQUUseUJBUFM7QUFRNUJDLElBQUFBLGNBQWMsRUFBRSxzQkFSWTtBQVU1QkMsSUFBQUEsb0JBQW9CLEVBQUUsNEJBVk07QUFXNUJDLElBQUFBLG1CQUFtQixFQUFFLDJCQVhPO0FBYTVCQyxJQUFBQSxLQUFLLEVBQUUsYUFicUI7QUFjNUJDLElBQUFBLFlBQVksRUFBRSxvQkFkYztBQWU1QkMsSUFBQUEsVUFBVSxFQUFFLGtCQWZnQjtBQWdCNUJDLElBQUFBLFdBQVcsRUFBRSxtQkFoQmU7QUFrQjVCQyxJQUFBQSxVQUFVLEVBQUUscUJBbEJnQjtBQW9CNUJDLElBQUFBLGNBQWMsRUFBRSxzQkFwQlk7QUFzQjVCQyxJQUFBQSxVQUFVLEVBQUUsa0JBdEJnQjtBQXVCNUJDLElBQUFBLFdBQVcsRUFBRSxtQkF2QmU7QUF5QjVCQyxJQUFBQSxPQUFPLEVBQUUsZUF6Qm1CO0FBMEI1QkMsSUFBQUEsT0FBTyxFQUFFLGVBMUJtQjtBQTRCNUJDLElBQUFBLGFBQWEsRUFBRSxxQkE1QmE7QUE4QjVCQyxJQUFBQSxRQUFRLEVBQUUsZ0JBOUJrQjtBQWdDNUJDLElBQUFBLFlBQVksRUFBRSxvQkFoQ2M7QUFrQzVCQyxJQUFBQSxXQUFXLEVBQUUsbUJBbENlO0FBbUM1QkMsSUFBQUEscUJBQXFCLEVBQUUsNkJBbkNLO0FBcUM1QkMsSUFBQUEsUUFBUSxFQUFFLGdCQXJDa0I7QUFzQzVCQyxJQUFBQSxXQUFXLEVBQUUsbUJBdENlO0FBd0M1QkMsSUFBQUEsZUFBZSxFQUFFLHVCQXhDVztBQTBDNUJDLElBQUFBLGdCQUFnQixFQUFFLHdCQTFDVTtBQTRDNUJDLElBQUFBLE9BQU8sRUFBRSxlQTVDbUI7QUE4QzVCQyxJQUFBQSxTQUFTLEVBQUUsV0E5Q2lCO0FBZ0Q1QkMsSUFBQUEsVUFBVSxFQUFFLGtCQWhEZ0I7QUFrRDVCQyxJQUFBQSxZQUFZLEVBQUUsb0JBbERjO0FBbUQ1QkMsSUFBQUEsV0FBVyxFQUFFLG1CQW5EZTtBQXFENUJDLElBQUFBLHVCQUF1QixFQUFFLCtCQXJERztBQXNENUJDLElBQUFBLHlCQUF5QixFQUFFLGlDQXREQztBQXVENUJDLElBQUFBLG1CQUFtQixFQUFFO0FBdkRPLEdBQTlCOztBQTBEQSxNQUFJLENBQUNDLGdCQUFFQyxHQUFGLENBQU1wQyxxQkFBTixFQUE2QkYsYUFBN0IsQ0FBTCxFQUFrRDtBQUNoRCxVQUFNLElBQUl1Qyx5QkFBT0MsbUJBQVgsQ0FBZ0MsMkJBQTBCeEMsYUFBYyxLQUF6QyxHQUNsQyxRQUFPcUMsZ0JBQUVJLElBQUYsQ0FBT3ZDLHFCQUFQLENBQThCLDBCQURsQyxDQUFOO0FBRUQ7O0FBQ0QsU0FBTyxNQUFNLEtBQUtBLHFCQUFxQixDQUFDRixhQUFELENBQTFCLEVBQTJDQyxJQUEzQyxDQUFiO0FBQ0QsQ0FoRUQ7O2VBa0VlSCxVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IGVycm9ycyB9IGZyb20gJ2FwcGl1bS1iYXNlLWRyaXZlcic7XG5cbmxldCBleHRlbnNpb25zID0ge307XG5cbmV4dGVuc2lvbnMuZXhlY3V0ZU1vYmlsZSA9IGFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVNb2JpbGUgKG1vYmlsZUNvbW1hbmQsIG9wdHMgPSB7fSkge1xuICBjb25zdCBtb2JpbGVDb21tYW5kc01hcHBpbmcgPSB7XG4gICAgc2hlbGw6ICdtb2JpbGVTaGVsbCcsXG5cbiAgICBleGVjRW11Q29uc29sZUNvbW1hbmQ6ICdtb2JpbGVFeGVjRW11Q29uc29sZUNvbW1hbmQnLFxuXG4gICAgcGVyZm9ybUVkaXRvckFjdGlvbjogJ21vYmlsZVBlcmZvcm1FZGl0b3JBY3Rpb24nLFxuXG4gICAgY2hhbmdlUGVybWlzc2lvbnM6ICdtb2JpbGVDaGFuZ2VQZXJtaXNzaW9ucycsXG4gICAgZ2V0UGVybWlzc2lvbnM6ICdtb2JpbGVHZXRQZXJtaXNzaW9ucycsXG5cbiAgICBzdGFydFNjcmVlblN0cmVhbWluZzogJ21vYmlsZVN0YXJ0U2NyZWVuU3RyZWFtaW5nJyxcbiAgICBzdG9wU2NyZWVuU3RyZWFtaW5nOiAnbW9iaWxlU3RvcFNjcmVlblN0cmVhbWluZycsXG5cbiAgICBzd2lwZTogJ21vYmlsZVN3aXBlJyxcbiAgICBzY3JvbGxUb1BhZ2U6ICdtb2JpbGVTY3JvbGxUb1BhZ2UnLFxuICAgIG5hdmlnYXRlVG86ICdtb2JpbGVOYXZpZ2F0ZVRvJyxcbiAgICBjbGlja0FjdGlvbjogJ21vYmlsZUNsaWNrQWN0aW9uJyxcblxuICAgIGRldmljZUluZm86ICdtb2JpbGVHZXREZXZpY2VJbmZvJyxcblxuICAgIGlzVG9hc3RWaXNpYmxlOiAnbW9iaWxlSXNUb2FzdFZpc2libGUnLFxuXG4gICAgb3BlbkRyYXdlcjogJ21vYmlsZU9wZW5EcmF3ZXInLFxuICAgIGNsb3NlRHJhd2VyOiAnbW9iaWxlQ2xvc2VEcmF3ZXInLFxuXG4gICAgc2V0RGF0ZTogJ21vYmlsZVNldERhdGUnLFxuICAgIHNldFRpbWU6ICdtb2JpbGVTZXRUaW1lJyxcblxuICAgIGdldERldmljZVRpbWU6ICdtb2JpbGVHZXREZXZpY2VUaW1lJyxcblxuICAgIGJhY2tkb29yOiAnbW9iaWxlQmFja2Rvb3InLFxuXG4gICAgZmxhc2hFbGVtZW50OiAnbW9iaWxlRmxhc2hFbGVtZW50JyxcblxuICAgIHVpYXV0b21hdG9yOiAnbW9iaWxlVWlhdXRvbWF0b3InLFxuICAgIHVpYXV0b21hdG9yUGFnZVNvdXJjZTogJ21vYmlsZVVpYXV0b21hdG9yUGFnZVNvdXJjZScsXG5cbiAgICB3ZWJBdG9tczogJ21vYmlsZVdlYkF0b21zJyxcbiAgICBnZXRDb250ZXh0czogJ21vYmlsZUdldENvbnRleHRzJyxcblxuICAgIGRpc21pc3NBdXRvZmlsbDogJ21vYmlsZURpc21pc3NBdXRvZmlsbCcsXG5cbiAgICBnZXROb3RpZmljYXRpb25zOiAnbW9iaWxlR2V0Tm90aWZpY2F0aW9ucycsXG5cbiAgICBsaXN0U21zOiAnbW9iaWxlTGlzdFNtcycsXG5cbiAgICBzZW5zb3JTZXQ6ICdzZW5zb3JTZXQnLFxuXG4gICAgZGVsZXRlRmlsZTogJ21vYmlsZURlbGV0ZUZpbGUnLFxuXG4gICAgc3RhcnRTZXJ2aWNlOiAnbW9iaWxlU3RhcnRTZXJ2aWNlJyxcbiAgICBzdG9wU2VydmljZTogJ21vYmlsZVN0b3BTZXJ2aWNlJyxcblxuICAgIHJlZ2lzdGVySWRsaW5nUmVzb3VyY2VzOiAnbW9iaWxlUmVnaXN0ZXJJZGxpbmdSZXNvdXJjZXMnLFxuICAgIHVucmVnaXN0ZXJJZGxpbmdSZXNvdXJjZXM6ICdtb2JpbGVVbnJlZ2lzdGVySWRsaW5nUmVzb3VyY2VzJyxcbiAgICBsaXN0SWRsaW5nUmVzb3VyY2VzOiAnbW9iaWxlTGlzdElkbGluZ1Jlc291cmNlcycsXG4gIH07XG5cbiAgaWYgKCFfLmhhcyhtb2JpbGVDb21tYW5kc01hcHBpbmcsIG1vYmlsZUNvbW1hbmQpKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5Vbmtub3duQ29tbWFuZEVycm9yKGBVbmtub3duIG1vYmlsZSBjb21tYW5kIFwiJHttb2JpbGVDb21tYW5kfVwiLiBgICtcbiAgICAgIGBPbmx5ICR7Xy5rZXlzKG1vYmlsZUNvbW1hbmRzTWFwcGluZyl9IGNvbW1hbmRzIGFyZSBzdXBwb3J0ZWQuYCk7XG4gIH1cbiAgcmV0dXJuIGF3YWl0IHRoaXNbbW9iaWxlQ29tbWFuZHNNYXBwaW5nW21vYmlsZUNvbW1hbmRdXShvcHRzKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGV4dGVuc2lvbnM7XG4iXSwiZmlsZSI6ImxpYi9jb21tYW5kcy9leGVjdXRlLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
