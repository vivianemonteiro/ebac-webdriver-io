"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.commands = void 0;

require("source-map-support/register");

var _utils = require("../utils");

const commands = {};
exports.commands = commands;

commands.mobileRegisterIdlingResources = async function mobileRegisterIdlingResources(opts = {}) {
  return await this.espresso.jwproxy.command('/appium/execute_mobile/register_idling_resources', 'POST', (0, _utils.requireOptions)(opts, ['classNames']));
};

commands.mobileUnregisterIdlingResources = async function mobileUnregisterIdlingResources(opts = {}) {
  return await this.espresso.jwproxy.command('/appium/execute_mobile/unregister_idling_resources', 'POST', (0, _utils.requireOptions)(opts, ['classNames']));
};

commands.mobileListIdlingResources = async function mobileListIdlingResources() {
  return await this.espresso.jwproxy.command('/appium/execute_mobile/list_idling_resources', 'GET');
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9pZGxpbmctcmVzb3VyY2VzLmpzIl0sIm5hbWVzIjpbImNvbW1hbmRzIiwibW9iaWxlUmVnaXN0ZXJJZGxpbmdSZXNvdXJjZXMiLCJvcHRzIiwiZXNwcmVzc28iLCJqd3Byb3h5IiwiY29tbWFuZCIsIm1vYmlsZVVucmVnaXN0ZXJJZGxpbmdSZXNvdXJjZXMiLCJtb2JpbGVMaXN0SWRsaW5nUmVzb3VyY2VzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxRQUFRLEdBQUcsRUFBakI7OztBQXFCQUEsUUFBUSxDQUFDQyw2QkFBVCxHQUF5QyxlQUFlQSw2QkFBZixDQUE4Q0MsSUFBSSxHQUFHLEVBQXJELEVBQXlEO0FBQ2hHLFNBQU8sTUFBTSxLQUFLQyxRQUFMLENBQWNDLE9BQWQsQ0FBc0JDLE9BQXRCLENBQThCLGtEQUE5QixFQUFrRixNQUFsRixFQUNYLDJCQUFlSCxJQUFmLEVBQXFCLENBQUMsWUFBRCxDQUFyQixDQURXLENBQWI7QUFFRCxDQUhEOztBQVlBRixRQUFRLENBQUNNLCtCQUFULEdBQTJDLGVBQWVBLCtCQUFmLENBQWdESixJQUFJLEdBQUcsRUFBdkQsRUFBMkQ7QUFDcEcsU0FBTyxNQUFNLEtBQUtDLFFBQUwsQ0FBY0MsT0FBZCxDQUFzQkMsT0FBdEIsQ0FBOEIsb0RBQTlCLEVBQW9GLE1BQXBGLEVBQ1gsMkJBQWVILElBQWYsRUFBcUIsQ0FBQyxZQUFELENBQXJCLENBRFcsQ0FBYjtBQUVELENBSEQ7O0FBV0FGLFFBQVEsQ0FBQ08seUJBQVQsR0FBcUMsZUFBZUEseUJBQWYsR0FBNEM7QUFDL0UsU0FBTyxNQUFNLEtBQUtKLFFBQUwsQ0FBY0MsT0FBZCxDQUFzQkMsT0FBdEIsQ0FBOEIsOENBQTlCLEVBQThFLEtBQTlFLENBQWI7QUFDRCxDQUZEOztlQUtlTCxRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVxdWlyZU9wdGlvbnMgfSBmcm9tICcuLi91dGlscyc7XG5cbmNvbnN0IGNvbW1hbmRzID0ge307XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gSWRsaW5nUmVzb3VyY2VzT3B0aW9uc1xuICogQHByb3BlcnR5IHshc3RyaW5nfSBjbGFzc05hbWVzIC0gVGhlIGNvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIGlkbGluZyByZXNvdXJjZXMgY2xhc3MgbmFtZXMuXG4gKiBFYWNoIG5hbWUgbXVzdCBiZSBhIGZ1bGwtcXVhbGlmaWVkIGphdmEgY2xhc3MgbmFtZSwgbGlrZSBgaW8uYXBwaXVtLmVzcHJlc3Nvc2VydmVyLmxpYi5NeUlkbGluZ1Jlc291cmNlYC5cbiAqIEVhY2ggY2xhc3MgaW4gdGhlIGFwcCBzb3VyY2UgbXVzdCBpbXBsZW1lbnQgYSBzaW5nbGV0b24gcGF0dGVybiBhbmQgaGF2ZSBhIHN0YXRpYyBgZ2V0SW5zdGFuY2UoKWBcbiAqIG1ldGhvZCByZXR1cm5pbmcgdGhlIGNsYXNzIGluc3RhbmNlLCB3aGljaCBpbXBsZW1lbnRzIGBhbmRyb2lkeC50ZXN0LmVzcHJlc3NvLklkbGluZ1Jlc291cmNlYFxuICogaW50ZXJmYWNlLiBSZWFkXG4gKiAtIGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3RyYWluaW5nL3Rlc3RpbmcvZXNwcmVzc28vaWRsaW5nLXJlc291cmNlXG4gKiAtIGh0dHBzOi8vYW5kcm9pZC5qbGVsc2UuZXUvaW50ZWdyYXRlLWVzcHJlc3NvLWlkbGluZy1yZXNvdXJjZXMtaW4teW91ci1hcHAtdG8tYnVpbGQtZmxleGlibGUtdWktdGVzdHMtYzc3OWUyNGY1MDU3XG4gKiBmb3IgbW9yZSBkZXRhaWxzIG9uIGhvdyB0byBkZXNpZ24gYW5kIHVzZSBpZGxpbmcgcmVzb3VyY2VzIGNvbmNlcHQgaW4gRXNwcmVzc28uXG4gKi9cblxuLyoqXG4gKiBSZWdpc3RlcnMgb25lIG9yIG1vcmUgaWRsaW5nIHJlc291cmNlc1xuICpcbiAqIEBwYXJhbSB7SWRsaW5nUmVzb3VyY2VzT3B0aW9uc30gb3B0c1xuICogQHRocm93cyB7RXJyb3J9IElmIHRoZXJlIHdhcyBhIGZhaWx1cmUgd2hpbGUgcGFyc2luZyBvcHRpb25zIG9yIHJlZ2lzdGVyaW5nXG4gKiB0aGUgYWN0dWFsIGluc3RhbmNlc1xuICovXG5jb21tYW5kcy5tb2JpbGVSZWdpc3RlcklkbGluZ1Jlc291cmNlcyA9IGFzeW5jIGZ1bmN0aW9uIG1vYmlsZVJlZ2lzdGVySWRsaW5nUmVzb3VyY2VzIChvcHRzID0ge30pIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMuZXNwcmVzc28uandwcm94eS5jb21tYW5kKCcvYXBwaXVtL2V4ZWN1dGVfbW9iaWxlL3JlZ2lzdGVyX2lkbGluZ19yZXNvdXJjZXMnLCAnUE9TVCcsXG4gICAgcmVxdWlyZU9wdGlvbnMob3B0cywgWydjbGFzc05hbWVzJ10pKTtcbn07XG5cbi8qKlxuICogVW5yZWdpc3RlcnMgb25lIG9yIG1vcmUgaWRsaW5nIHJlc291cmNlc1xuICpcbiAqIEBwYXJhbSB7SWRsaW5nUmVzb3VyY2VzT3B0aW9uc30gb3B0c1xuICogQHRocm93cyB7RXJyb3J9IElmIHRoZXJlIHdhcyBhIGZhaWx1cmUgd2hpbGUgcGFyc2luZyBvcHRpb25zIG9yIHVucmVnaXN0ZXJpbmdcbiAqIHRoZSBhY3R1YWwgaW5zdGFuY2VzXG4gKi9cbmNvbW1hbmRzLm1vYmlsZVVucmVnaXN0ZXJJZGxpbmdSZXNvdXJjZXMgPSBhc3luYyBmdW5jdGlvbiBtb2JpbGVVbnJlZ2lzdGVySWRsaW5nUmVzb3VyY2VzIChvcHRzID0ge30pIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMuZXNwcmVzc28uandwcm94eS5jb21tYW5kKCcvYXBwaXVtL2V4ZWN1dGVfbW9iaWxlL3VucmVnaXN0ZXJfaWRsaW5nX3Jlc291cmNlcycsICdQT1NUJyxcbiAgICByZXF1aXJlT3B0aW9ucyhvcHRzLCBbJ2NsYXNzTmFtZXMnXSkpO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIGEgbGlzdCBvZiBjdXJyZW50bHkgcmVnaXN0ZXJlZCBpZGxpbmcgcmVzb3VyY2VzXG4gKiBvciBhbiBlbXB0eSBsaXN0IGlmIG5vIHJlc291cmNlcyBoYXZlIGJlZW4gcmVnaXN0ZXJlZCB5ZXQuXG4gKlxuICogQHJldHVybnMge0FycmF5PHN0cmluZz59IFRoZSBsaXN0IG9mIGZ1bGx5IHF1YWxpZmllZCBjbGFzcyBuYW1lc1xuICovXG5jb21tYW5kcy5tb2JpbGVMaXN0SWRsaW5nUmVzb3VyY2VzID0gYXN5bmMgZnVuY3Rpb24gbW9iaWxlTGlzdElkbGluZ1Jlc291cmNlcyAoKSB7XG4gIHJldHVybiBhd2FpdCB0aGlzLmVzcHJlc3NvLmp3cHJveHkuY29tbWFuZCgnL2FwcGl1bS9leGVjdXRlX21vYmlsZS9saXN0X2lkbGluZ19yZXNvdXJjZXMnLCAnR0VUJyk7XG59O1xuXG5leHBvcnQgeyBjb21tYW5kcyB9O1xuZXhwb3J0IGRlZmF1bHQgY29tbWFuZHM7XG4iXSwiZmlsZSI6ImxpYi9jb21tYW5kcy9pZGxpbmctcmVzb3VyY2VzLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
