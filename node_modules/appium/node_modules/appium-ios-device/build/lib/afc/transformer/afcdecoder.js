"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AfcDecoder = void 0;

require("source-map-support/register");

var _stream = _interopRequireDefault(require("stream"));

var _protocol = require("../protocol");

class AfcDecoder extends _stream.default.Transform {
  constructor() {
    super({
      objectMode: true
    });
  }

  _transform(data, encoding, onData) {
    this._decode(data);

    onData();
  }

  _decode(data) {
    const magicNumber = data.slice(0, 8);

    if (magicNumber.compare(_protocol.MAGIC_NUMBER) !== 0) {
      throw new Error(`Unexpected magic number: ${magicNumber}`);
    }

    const messageLength = this.readUInt64LE(data, 8);
    const thisLength = this.readUInt64LE(data, 16);
    const packetNumber = this.readUInt64LE(data, 24);
    const opCode = this.readUInt64LE(data, 32);
    const headerPayload = data.slice(_protocol.AFC_PACKET_HEADER_SIZE, thisLength);
    const content = data.slice(thisLength, messageLength);
    this.push({
      messageLength,
      packetNumber,
      opCode,
      headerPayload,
      content
    });
  }

  readUInt64LE(buffer, index) {
    return buffer.readUInt32LE(index);
  }

}

exports.AfcDecoder = AfcDecoder;
var _default = AfcDecoder;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hZmMvdHJhbnNmb3JtZXIvYWZjZGVjb2Rlci5qcyJdLCJuYW1lcyI6WyJBZmNEZWNvZGVyIiwiU3RyZWFtIiwiVHJhbnNmb3JtIiwiY29uc3RydWN0b3IiLCJvYmplY3RNb2RlIiwiX3RyYW5zZm9ybSIsImRhdGEiLCJlbmNvZGluZyIsIm9uRGF0YSIsIl9kZWNvZGUiLCJtYWdpY051bWJlciIsInNsaWNlIiwiY29tcGFyZSIsIk1BR0lDX05VTUJFUiIsIkVycm9yIiwibWVzc2FnZUxlbmd0aCIsInJlYWRVSW50NjRMRSIsInRoaXNMZW5ndGgiLCJwYWNrZXROdW1iZXIiLCJvcENvZGUiLCJoZWFkZXJQYXlsb2FkIiwiQUZDX1BBQ0tFVF9IRUFERVJfU0laRSIsImNvbnRlbnQiLCJwdXNoIiwiYnVmZmVyIiwiaW5kZXgiLCJyZWFkVUludDMyTEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBR0EsTUFBTUEsVUFBTixTQUF5QkMsZ0JBQU9DLFNBQWhDLENBQTBDO0FBRXhDQyxFQUFBQSxXQUFXLEdBQUk7QUFDYixVQUFNO0FBQUVDLE1BQUFBLFVBQVUsRUFBRTtBQUFkLEtBQU47QUFDRDs7QUFFREMsRUFBQUEsVUFBVSxDQUFFQyxJQUFGLEVBQVFDLFFBQVIsRUFBa0JDLE1BQWxCLEVBQTBCO0FBQ2xDLFNBQUtDLE9BQUwsQ0FBYUgsSUFBYjs7QUFDQUUsSUFBQUEsTUFBTTtBQUNQOztBQUVEQyxFQUFBQSxPQUFPLENBQUVILElBQUYsRUFBUTtBQUNiLFVBQU1JLFdBQVcsR0FBR0osSUFBSSxDQUFDSyxLQUFMLENBQVcsQ0FBWCxFQUFjLENBQWQsQ0FBcEI7O0FBQ0EsUUFBSUQsV0FBVyxDQUFDRSxPQUFaLENBQW9CQyxzQkFBcEIsTUFBc0MsQ0FBMUMsRUFBNkM7QUFDM0MsWUFBTSxJQUFJQyxLQUFKLENBQVcsNEJBQTJCSixXQUFZLEVBQWxELENBQU47QUFDRDs7QUFDRCxVQUFNSyxhQUFhLEdBQUcsS0FBS0MsWUFBTCxDQUFrQlYsSUFBbEIsRUFBd0IsQ0FBeEIsQ0FBdEI7QUFDQSxVQUFNVyxVQUFVLEdBQUcsS0FBS0QsWUFBTCxDQUFrQlYsSUFBbEIsRUFBd0IsRUFBeEIsQ0FBbkI7QUFDQSxVQUFNWSxZQUFZLEdBQUcsS0FBS0YsWUFBTCxDQUFrQlYsSUFBbEIsRUFBd0IsRUFBeEIsQ0FBckI7QUFDQSxVQUFNYSxNQUFNLEdBQUcsS0FBS0gsWUFBTCxDQUFrQlYsSUFBbEIsRUFBd0IsRUFBeEIsQ0FBZjtBQUVBLFVBQU1jLGFBQWEsR0FBR2QsSUFBSSxDQUFDSyxLQUFMLENBQVdVLGdDQUFYLEVBQW1DSixVQUFuQyxDQUF0QjtBQUNBLFVBQU1LLE9BQU8sR0FBR2hCLElBQUksQ0FBQ0ssS0FBTCxDQUFXTSxVQUFYLEVBQXVCRixhQUF2QixDQUFoQjtBQUVBLFNBQUtRLElBQUwsQ0FBVTtBQUFFUixNQUFBQSxhQUFGO0FBQWlCRyxNQUFBQSxZQUFqQjtBQUErQkMsTUFBQUEsTUFBL0I7QUFBdUNDLE1BQUFBLGFBQXZDO0FBQXNERSxNQUFBQTtBQUF0RCxLQUFWO0FBQ0Q7O0FBRUROLEVBQUFBLFlBQVksQ0FBRVEsTUFBRixFQUFVQyxLQUFWLEVBQWlCO0FBRTNCLFdBQU9ELE1BQU0sQ0FBQ0UsWUFBUCxDQUFvQkQsS0FBcEIsQ0FBUDtBQUNEOztBQTlCdUM7OztlQWtDM0J6QixVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmVhbSBmcm9tICdzdHJlYW0nO1xuaW1wb3J0IHsgTUFHSUNfTlVNQkVSLCBBRkNfUEFDS0VUX0hFQURFUl9TSVpFIH0gZnJvbSAnLi4vcHJvdG9jb2wnO1xuXG5cbmNsYXNzIEFmY0RlY29kZXIgZXh0ZW5kcyBTdHJlYW0uVHJhbnNmb3JtIHtcblxuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuICB9XG5cbiAgX3RyYW5zZm9ybSAoZGF0YSwgZW5jb2RpbmcsIG9uRGF0YSkge1xuICAgIHRoaXMuX2RlY29kZShkYXRhKTtcbiAgICBvbkRhdGEoKTtcbiAgfVxuXG4gIF9kZWNvZGUgKGRhdGEpIHtcbiAgICBjb25zdCBtYWdpY051bWJlciA9IGRhdGEuc2xpY2UoMCwgOCk7XG4gICAgaWYgKG1hZ2ljTnVtYmVyLmNvbXBhcmUoTUFHSUNfTlVNQkVSKSAhPT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIG1hZ2ljIG51bWJlcjogJHttYWdpY051bWJlcn1gKTtcbiAgICB9XG4gICAgY29uc3QgbWVzc2FnZUxlbmd0aCA9IHRoaXMucmVhZFVJbnQ2NExFKGRhdGEsIDgpO1xuICAgIGNvbnN0IHRoaXNMZW5ndGggPSB0aGlzLnJlYWRVSW50NjRMRShkYXRhLCAxNik7XG4gICAgY29uc3QgcGFja2V0TnVtYmVyID0gdGhpcy5yZWFkVUludDY0TEUoZGF0YSwgMjQpO1xuICAgIGNvbnN0IG9wQ29kZSA9IHRoaXMucmVhZFVJbnQ2NExFKGRhdGEsIDMyKTtcblxuICAgIGNvbnN0IGhlYWRlclBheWxvYWQgPSBkYXRhLnNsaWNlKEFGQ19QQUNLRVRfSEVBREVSX1NJWkUsIHRoaXNMZW5ndGgpO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBkYXRhLnNsaWNlKHRoaXNMZW5ndGgsIG1lc3NhZ2VMZW5ndGgpO1xuXG4gICAgdGhpcy5wdXNoKHsgbWVzc2FnZUxlbmd0aCwgcGFja2V0TnVtYmVyLCBvcENvZGUsIGhlYWRlclBheWxvYWQsIGNvbnRlbnQgfSk7XG4gIH1cblxuICByZWFkVUludDY0TEUgKGJ1ZmZlciwgaW5kZXgpIHtcbiAgICAvLyBJZ25vcmUgdGhlIGZpcnN0IDQgYnl0ZXMgc2luY2Ugd2UgZG9uJ3QgZG8gYW55dGhpbmcgd2l0aCBsb25nc1xuICAgIHJldHVybiBidWZmZXIucmVhZFVJbnQzMkxFKGluZGV4KTtcbiAgfVxufVxuXG5leHBvcnQgeyBBZmNEZWNvZGVyIH07XG5leHBvcnQgZGVmYXVsdCBBZmNEZWNvZGVyO1xuIl0sImZpbGUiOiJsaWIvYWZjL3RyYW5zZm9ybWVyL2FmY2RlY29kZXIuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
