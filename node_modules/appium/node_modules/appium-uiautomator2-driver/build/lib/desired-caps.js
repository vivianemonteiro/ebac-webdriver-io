"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _appiumAndroidDriver = require("appium-android-driver");

let uiautomatorCapConstraints = {
  app: {
    presence: true,
    isString: true
  },
  automationName: {
    isString: true
  },
  browserName: {
    isString: true
  },
  launchTimeout: {
    isNumber: true
  },
  skipUnlock: {
    isBoolean: true
  },
  uiautomator2ServerLaunchTimeout: {
    isNumber: true
  },
  uiautomator2ServerInstallTimeout: {
    isNumber: true
  },
  uiautomator2ServerReadTimeout: {
    isNumber: true
  },
  disableWindowAnimation: {
    isBoolean: true
  },
  systemPort: {
    isNumber: true
  },
  mjpegServerPort: {
    isNumber: true
  },
  mjpegScreenshotUrl: {
    isString: true
  },
  skipServerInstallation: {
    isBoolean: true
  },
  androidCoverageEndIntent: {
    isString: true
  },
  userProfile: {
    isNumber: true
  },
  appWaitForLaunch: {
    isBoolean: true
  },
  disableSuppressAccessibilityService: {
    isBoolean: true
  }
};
let desiredCapConstraints = {};
Object.assign(desiredCapConstraints, uiautomatorCapConstraints, _appiumAndroidDriver.commonCapConstraints);
var _default = desiredCapConstraints;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kZXNpcmVkLWNhcHMuanMiXSwibmFtZXMiOlsidWlhdXRvbWF0b3JDYXBDb25zdHJhaW50cyIsImFwcCIsInByZXNlbmNlIiwiaXNTdHJpbmciLCJhdXRvbWF0aW9uTmFtZSIsImJyb3dzZXJOYW1lIiwibGF1bmNoVGltZW91dCIsImlzTnVtYmVyIiwic2tpcFVubG9jayIsImlzQm9vbGVhbiIsInVpYXV0b21hdG9yMlNlcnZlckxhdW5jaFRpbWVvdXQiLCJ1aWF1dG9tYXRvcjJTZXJ2ZXJJbnN0YWxsVGltZW91dCIsInVpYXV0b21hdG9yMlNlcnZlclJlYWRUaW1lb3V0IiwiZGlzYWJsZVdpbmRvd0FuaW1hdGlvbiIsInN5c3RlbVBvcnQiLCJtanBlZ1NlcnZlclBvcnQiLCJtanBlZ1NjcmVlbnNob3RVcmwiLCJza2lwU2VydmVySW5zdGFsbGF0aW9uIiwiYW5kcm9pZENvdmVyYWdlRW5kSW50ZW50IiwidXNlclByb2ZpbGUiLCJhcHBXYWl0Rm9yTGF1bmNoIiwiZGlzYWJsZVN1cHByZXNzQWNjZXNzaWJpbGl0eVNlcnZpY2UiLCJkZXNpcmVkQ2FwQ29uc3RyYWludHMiLCJPYmplY3QiLCJhc3NpZ24iLCJjb21tb25DYXBDb25zdHJhaW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRUEsSUFBSUEseUJBQXlCLEdBQUc7QUFDOUJDLEVBQUFBLEdBQUcsRUFBRTtBQUNIQyxJQUFBQSxRQUFRLEVBQUUsSUFEUDtBQUVIQyxJQUFBQSxRQUFRLEVBQUU7QUFGUCxHQUR5QjtBQUs5QkMsRUFBQUEsY0FBYyxFQUFFO0FBQ2RELElBQUFBLFFBQVEsRUFBRTtBQURJLEdBTGM7QUFROUJFLEVBQUFBLFdBQVcsRUFBRTtBQUNYRixJQUFBQSxRQUFRLEVBQUU7QUFEQyxHQVJpQjtBQVc5QkcsRUFBQUEsYUFBYSxFQUFFO0FBQ2JDLElBQUFBLFFBQVEsRUFBRTtBQURHLEdBWGU7QUFjOUJDLEVBQUFBLFVBQVUsRUFBRTtBQUNWQyxJQUFBQSxTQUFTLEVBQUU7QUFERCxHQWRrQjtBQWlCOUJDLEVBQUFBLCtCQUErQixFQUFFO0FBQy9CSCxJQUFBQSxRQUFRLEVBQUU7QUFEcUIsR0FqQkg7QUFvQjlCSSxFQUFBQSxnQ0FBZ0MsRUFBRTtBQUNoQ0osSUFBQUEsUUFBUSxFQUFFO0FBRHNCLEdBcEJKO0FBdUI5QkssRUFBQUEsNkJBQTZCLEVBQUU7QUFDN0JMLElBQUFBLFFBQVEsRUFBRTtBQURtQixHQXZCRDtBQTBCOUJNLEVBQUFBLHNCQUFzQixFQUFFO0FBQ3RCSixJQUFBQSxTQUFTLEVBQUU7QUFEVyxHQTFCTTtBQTZCOUJLLEVBQUFBLFVBQVUsRUFBRTtBQUNWUCxJQUFBQSxRQUFRLEVBQUU7QUFEQSxHQTdCa0I7QUFnQzlCUSxFQUFBQSxlQUFlLEVBQUU7QUFDZlIsSUFBQUEsUUFBUSxFQUFFO0FBREssR0FoQ2E7QUFtQzlCUyxFQUFBQSxrQkFBa0IsRUFBRTtBQUNsQmIsSUFBQUEsUUFBUSxFQUFFO0FBRFEsR0FuQ1U7QUFzQzlCYyxFQUFBQSxzQkFBc0IsRUFBRTtBQUN0QlIsSUFBQUEsU0FBUyxFQUFFO0FBRFcsR0F0Q007QUF5QzlCUyxFQUFBQSx3QkFBd0IsRUFBRTtBQUN4QmYsSUFBQUEsUUFBUSxFQUFFO0FBRGMsR0F6Q0k7QUE0QzlCZ0IsRUFBQUEsV0FBVyxFQUFFO0FBQ1haLElBQUFBLFFBQVEsRUFBRTtBQURDLEdBNUNpQjtBQStDOUJhLEVBQUFBLGdCQUFnQixFQUFFO0FBQ2hCWCxJQUFBQSxTQUFTLEVBQUU7QUFESyxHQS9DWTtBQWtEOUJZLEVBQUFBLG1DQUFtQyxFQUFFO0FBQ25DWixJQUFBQSxTQUFTLEVBQUU7QUFEd0I7QUFsRFAsQ0FBaEM7QUF1REEsSUFBSWEscUJBQXFCLEdBQUcsRUFBNUI7QUFDQUMsTUFBTSxDQUFDQyxNQUFQLENBQ0VGLHFCQURGLEVBRUV0Qix5QkFGRixFQUdFeUIseUNBSEY7ZUFNZUgscUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21tb25DYXBDb25zdHJhaW50cyB9IGZyb20gJ2FwcGl1bS1hbmRyb2lkLWRyaXZlcic7XG5cbmxldCB1aWF1dG9tYXRvckNhcENvbnN0cmFpbnRzID0ge1xuICBhcHA6IHtcbiAgICBwcmVzZW5jZTogdHJ1ZSxcbiAgICBpc1N0cmluZzogdHJ1ZVxuICB9LFxuICBhdXRvbWF0aW9uTmFtZToge1xuICAgIGlzU3RyaW5nOiB0cnVlXG4gIH0sXG4gIGJyb3dzZXJOYW1lOiB7XG4gICAgaXNTdHJpbmc6IHRydWVcbiAgfSxcbiAgbGF1bmNoVGltZW91dDoge1xuICAgIGlzTnVtYmVyOiB0cnVlXG4gIH0sXG4gIHNraXBVbmxvY2s6IHtcbiAgICBpc0Jvb2xlYW46IHRydWVcbiAgfSxcbiAgdWlhdXRvbWF0b3IyU2VydmVyTGF1bmNoVGltZW91dDoge1xuICAgIGlzTnVtYmVyOiB0cnVlXG4gIH0sXG4gIHVpYXV0b21hdG9yMlNlcnZlckluc3RhbGxUaW1lb3V0OiB7XG4gICAgaXNOdW1iZXI6IHRydWVcbiAgfSxcbiAgdWlhdXRvbWF0b3IyU2VydmVyUmVhZFRpbWVvdXQ6IHtcbiAgICBpc051bWJlcjogdHJ1ZVxuICB9LFxuICBkaXNhYmxlV2luZG93QW5pbWF0aW9uOiB7XG4gICAgaXNCb29sZWFuOiB0cnVlXG4gIH0sXG4gIHN5c3RlbVBvcnQ6IHtcbiAgICBpc051bWJlcjogdHJ1ZVxuICB9LFxuICBtanBlZ1NlcnZlclBvcnQ6IHtcbiAgICBpc051bWJlcjogdHJ1ZVxuICB9LFxuICBtanBlZ1NjcmVlbnNob3RVcmw6IHtcbiAgICBpc1N0cmluZzogdHJ1ZVxuICB9LFxuICBza2lwU2VydmVySW5zdGFsbGF0aW9uOiB7XG4gICAgaXNCb29sZWFuOiB0cnVlXG4gIH0sXG4gIGFuZHJvaWRDb3ZlcmFnZUVuZEludGVudDoge1xuICAgIGlzU3RyaW5nOiB0cnVlXG4gIH0sXG4gIHVzZXJQcm9maWxlOiB7XG4gICAgaXNOdW1iZXI6IHRydWVcbiAgfSxcbiAgYXBwV2FpdEZvckxhdW5jaDoge1xuICAgIGlzQm9vbGVhbjogdHJ1ZVxuICB9LFxuICBkaXNhYmxlU3VwcHJlc3NBY2Nlc3NpYmlsaXR5U2VydmljZToge1xuICAgIGlzQm9vbGVhbjogdHJ1ZVxuICB9XG59O1xuXG5sZXQgZGVzaXJlZENhcENvbnN0cmFpbnRzID0ge307XG5PYmplY3QuYXNzaWduKFxuICBkZXNpcmVkQ2FwQ29uc3RyYWludHMsXG4gIHVpYXV0b21hdG9yQ2FwQ29uc3RyYWludHMsXG4gIGNvbW1vbkNhcENvbnN0cmFpbnRzXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBkZXNpcmVkQ2FwQ29uc3RyYWludHM7XG4iXSwiZmlsZSI6ImxpYi9kZXNpcmVkLWNhcHMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
