"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startSyslogService = startSyslogService;
exports.startWebInspectorService = startWebInspectorService;
exports.startInstallationProxyService = startInstallationProxyService;
exports.startSimulateLocationService = startSimulateLocationService;
exports.startAfcService = startAfcService;
exports.startNotificationProxyService = startNotificationProxyService;
exports.startHouseArrestService = startHouseArrestService;

require("source-map-support/register");

var _utilities = require("./utilities");

var _syslog = require("./syslog");

var _simulatelocation = require("./simulatelocation");

var _webinspector = require("./webinspector");

var _installationProxy = require("./installation-proxy");

var _afc = require("./afc");

var _notificationProxy = require("./notification-proxy");

var _houseArrest = require("./house-arrest");

var _plistService = _interopRequireDefault(require("./plist-service"));

var _semver = _interopRequireDefault(require("semver"));

async function startSyslogService(udid, opts = {}) {
  return new _syslog.SyslogService((await startService(udid, _syslog.SYSLOG_SERVICE_NAME, opts.socket)));
}

async function startSimulateLocationService(udid, opts = {}) {
  return new _simulatelocation.SimulateLocationService((await startService(udid, _simulatelocation.SIMULATE_LOCATION_SERVICE_NAME, opts.socket)));
}

async function startWebInspectorService(udid, opts = {}) {
  const osVersion = opts.osVersion || (await (0, _utilities.getOSVersion)(udid, opts.socket));

  const semverVersion = _semver.default.coerce(osVersion);

  if (!semverVersion) {
    throw new Error(`Could not create a semver version out of '${osVersion}'`);
  }

  const socketClient = opts.socket || (await startService(udid, _webinspector.WEB_INSPECTOR_SERVICE_NAME));
  return new _webinspector.WebInspectorService(semverVersion.major, socketClient);
}

async function startInstallationProxyService(udid, opts = {}) {
  return new _installationProxy.InstallationProxyService(new _plistService.default((await startService(udid, _installationProxy.INSTALLATION_PROXY_SERVICE_NAME, opts.socket))));
}

async function startAfcService(udid, opts = {}) {
  return new _afc.AfcService((await startService(udid, _afc.AFC_SERVICE_NAME, opts.socket)));
}

async function startNotificationProxyService(udid, opts = {}) {
  return new _notificationProxy.NotificationProxyService((await startService(udid, _notificationProxy.NOTIFICATION_PROXY_SERVICE_NAME, opts.socket)));
}

async function startHouseArrestService(udid, opts = {}) {
  return new _houseArrest.HouseArrestService((await startService(udid, _houseArrest.HOUSE_ARREST_SERVICE_NAME, opts.socket)));
}

async function startService(udid, serviceName, socket) {
  const lockdown = await (0, _utilities.startLockdownSession)(udid, socket);

  try {
    const service = await lockdown.startService(serviceName);

    if (service.EnableServiceSSL) {
      return await (0, _utilities.connectPortSSL)(udid, service.Port, socket);
    } else {
      return await (0, _utilities.connectPort)(udid, service.Port, socket);
    }
  } finally {
    lockdown.close();
  }
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy5qcyJdLCJuYW1lcyI6WyJzdGFydFN5c2xvZ1NlcnZpY2UiLCJ1ZGlkIiwib3B0cyIsIlN5c2xvZ1NlcnZpY2UiLCJzdGFydFNlcnZpY2UiLCJTWVNMT0dfU0VSVklDRV9OQU1FIiwic29ja2V0Iiwic3RhcnRTaW11bGF0ZUxvY2F0aW9uU2VydmljZSIsIlNpbXVsYXRlTG9jYXRpb25TZXJ2aWNlIiwiU0lNVUxBVEVfTE9DQVRJT05fU0VSVklDRV9OQU1FIiwic3RhcnRXZWJJbnNwZWN0b3JTZXJ2aWNlIiwib3NWZXJzaW9uIiwic2VtdmVyVmVyc2lvbiIsInNlbXZlciIsImNvZXJjZSIsIkVycm9yIiwic29ja2V0Q2xpZW50IiwiV0VCX0lOU1BFQ1RPUl9TRVJWSUNFX05BTUUiLCJXZWJJbnNwZWN0b3JTZXJ2aWNlIiwibWFqb3IiLCJzdGFydEluc3RhbGxhdGlvblByb3h5U2VydmljZSIsIkluc3RhbGxhdGlvblByb3h5U2VydmljZSIsIlBsaXN0U2VydmljZSIsIklOU1RBTExBVElPTl9QUk9YWV9TRVJWSUNFX05BTUUiLCJzdGFydEFmY1NlcnZpY2UiLCJBZmNTZXJ2aWNlIiwiQUZDX1NFUlZJQ0VfTkFNRSIsInN0YXJ0Tm90aWZpY2F0aW9uUHJveHlTZXJ2aWNlIiwiTm90aWZpY2F0aW9uUHJveHlTZXJ2aWNlIiwiTk9USUZJQ0FUSU9OX1BST1hZX1NFUlZJQ0VfTkFNRSIsInN0YXJ0SG91c2VBcnJlc3RTZXJ2aWNlIiwiSG91c2VBcnJlc3RTZXJ2aWNlIiwiSE9VU0VfQVJSRVNUX1NFUlZJQ0VfTkFNRSIsInNlcnZpY2VOYW1lIiwibG9ja2Rvd24iLCJzZXJ2aWNlIiwiRW5hYmxlU2VydmljZVNTTCIsIlBvcnQiLCJjbG9zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxlQUFlQSxrQkFBZixDQUFt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LElBQVosRUFBa0JrQyxPQUFPLENBQUNFLElBQTFCLEVBQWdDL0IsTUFBaEMsQ0FBYjtBQUNEO0FBQ0YsR0FQRCxTQU9VO0FBQ1I0QixJQUFBQSxRQUFRLENBQUNJLEtBQVQ7QUFDRDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdFBvcnQsIGNvbm5lY3RQb3J0U1NMLCBzdGFydExvY2tkb3duU2Vzc2lvbiwgZ2V0T1NWZXJzaW9uIH0gZnJvbSAnLi91dGlsaXRpZXMnO1xuaW1wb3J0IHsgU3lzbG9nU2VydmljZSwgU1lTTE9HX1NFUlZJQ0VfTkFNRSB9IGZyb20gJy4vc3lzbG9nJztcbmltcG9ydCB7IFNpbXVsYXRlTG9jYXRpb25TZXJ2aWNlLCBTSU1VTEFURV9MT0NBVElPTl9TRVJWSUNFX05BTUUgfSBmcm9tICcuL3NpbXVsYXRlbG9jYXRpb24nO1xuaW1wb3J0IHsgV2ViSW5zcGVjdG9yU2VydmljZSwgV0VCX0lOU1BFQ1RPUl9TRVJWSUNFX05BTUUgfSBmcm9tICcuL3dlYmluc3BlY3Rvcic7XG5pbXBvcnQgeyBJbnN0YWxsYXRpb25Qcm94eVNlcnZpY2UsIElOU1RBTExBVElPTl9QUk9YWV9TRVJWSUNFX05BTUUgfSBmcm9tICcuL2luc3RhbGxhdGlvbi1wcm94eSc7XG5pbXBvcnQgeyBBZmNTZXJ2aWNlLCBBRkNfU0VSVklDRV9OQU1FIH0gZnJvbSAnLi9hZmMnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uUHJveHlTZXJ2aWNlLCBOT1RJRklDQVRJT05fUFJPWFlfU0VSVklDRV9OQU1FIH0gZnJvbSAnLi9ub3RpZmljYXRpb24tcHJveHknO1xuaW1wb3J0IHsgSG91c2VBcnJlc3RTZXJ2aWNlLCBIT1VTRV9BUlJFU1RfU0VSVklDRV9OQU1FIH0gZnJvbSAnLi9ob3VzZS1hcnJlc3QnO1xuaW1wb3J0IFBsaXN0U2VydmljZSBmcm9tICcuL3BsaXN0LXNlcnZpY2UnO1xuaW1wb3J0IHNlbXZlciBmcm9tICdzZW12ZXInO1xuXG5hc3luYyBmdW5jdGlvbiBzdGFydFN5c2xvZ1NlcnZpY2UgKHVkaWQsIG9wdHMgPSB7fSkge1xuICByZXR1cm4gbmV3IFN5c2xvZ1NlcnZpY2UoYXdhaXQgc3RhcnRTZXJ2aWNlKHVkaWQsIFNZU0xPR19TRVJWSUNFX05BTUUsIG9wdHMuc29ja2V0KSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN0YXJ0U2ltdWxhdGVMb2NhdGlvblNlcnZpY2UgKHVkaWQsIG9wdHMgPSB7fSkge1xuICByZXR1cm4gbmV3IFNpbXVsYXRlTG9jYXRpb25TZXJ2aWNlKGF3YWl0IHN0YXJ0U2VydmljZSh1ZGlkLCBTSU1VTEFURV9MT0NBVElPTl9TRVJWSUNFX05BTUUsIG9wdHMuc29ja2V0KSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN0YXJ0V2ViSW5zcGVjdG9yU2VydmljZSAodWRpZCwgb3B0cyA9IHt9KSB7XG4gIGNvbnN0IG9zVmVyc2lvbiA9IG9wdHMub3NWZXJzaW9uIHx8IGF3YWl0IGdldE9TVmVyc2lvbih1ZGlkLCBvcHRzLnNvY2tldCk7XG4gIGNvbnN0IHNlbXZlclZlcnNpb24gPSBzZW12ZXIuY29lcmNlKG9zVmVyc2lvbik7XG4gIGlmICghc2VtdmVyVmVyc2lvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IGNyZWF0ZSBhIHNlbXZlciB2ZXJzaW9uIG91dCBvZiAnJHtvc1ZlcnNpb259J2ApO1xuICB9XG4gIGNvbnN0IHNvY2tldENsaWVudCA9IG9wdHMuc29ja2V0IHx8IGF3YWl0IHN0YXJ0U2VydmljZSh1ZGlkLCBXRUJfSU5TUEVDVE9SX1NFUlZJQ0VfTkFNRSk7XG4gIHJldHVybiBuZXcgV2ViSW5zcGVjdG9yU2VydmljZShzZW12ZXJWZXJzaW9uLm1ham9yLCBzb2NrZXRDbGllbnQpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBzdGFydEluc3RhbGxhdGlvblByb3h5U2VydmljZSAodWRpZCwgb3B0cyA9IHt9KSB7XG4gIHJldHVybiBuZXcgSW5zdGFsbGF0aW9uUHJveHlTZXJ2aWNlKG5ldyBQbGlzdFNlcnZpY2UoYXdhaXQgc3RhcnRTZXJ2aWNlKHVkaWQsIElOU1RBTExBVElPTl9QUk9YWV9TRVJWSUNFX05BTUUsIG9wdHMuc29ja2V0KSkpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBzdGFydEFmY1NlcnZpY2UgKHVkaWQsIG9wdHMgPSB7fSkge1xuICByZXR1cm4gbmV3IEFmY1NlcnZpY2UoYXdhaXQgc3RhcnRTZXJ2aWNlKHVkaWQsIEFGQ19TRVJWSUNFX05BTUUsIG9wdHMuc29ja2V0KSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN0YXJ0Tm90aWZpY2F0aW9uUHJveHlTZXJ2aWNlICh1ZGlkLCBvcHRzID0ge30pIHtcbiAgcmV0dXJuIG5ldyBOb3RpZmljYXRpb25Qcm94eVNlcnZpY2UoYXdhaXQgc3RhcnRTZXJ2aWNlKHVkaWQsIE5PVElGSUNBVElPTl9QUk9YWV9TRVJWSUNFX05BTUUsIG9wdHMuc29ja2V0KSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN0YXJ0SG91c2VBcnJlc3RTZXJ2aWNlICh1ZGlkLCBvcHRzID0ge30pIHtcbiAgcmV0dXJuIG5ldyBIb3VzZUFycmVzdFNlcnZpY2UoYXdhaXQgc3RhcnRTZXJ2aWNlKHVkaWQsIEhPVVNFX0FSUkVTVF9TRVJWSUNFX05BTUUsIG9wdHMuc29ja2V0KSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN0YXJ0U2VydmljZSAodWRpZCwgc2VydmljZU5hbWUsIHNvY2tldCkge1xuICBjb25zdCBsb2NrZG93biA9IGF3YWl0IHN0YXJ0TG9ja2Rvd25TZXNzaW9uKHVkaWQsIHNvY2tldCk7XG4gIHRyeSB7XG4gICAgY29uc3Qgc2VydmljZSA9IGF3YWl0IGxvY2tkb3duLnN0YXJ0U2VydmljZShzZXJ2aWNlTmFtZSk7XG4gICAgaWYgKHNlcnZpY2UuRW5hYmxlU2VydmljZVNTTCkge1xuICAgICAgcmV0dXJuIGF3YWl0IGNvbm5lY3RQb3J0U1NMKHVkaWQsIHNlcnZpY2UuUG9ydCwgc29ja2V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGF3YWl0IGNvbm5lY3RQb3J0KHVkaWQsIHNlcnZpY2UuUG9ydCwgc29ja2V0KTtcbiAgICB9XG4gIH0gZmluYWxseSB7XG4gICAgbG9ja2Rvd24uY2xvc2UoKTtcbiAgfVxufVxuXG5leHBvcnQge1xuICBzdGFydFN5c2xvZ1NlcnZpY2UsIHN0YXJ0V2ViSW5zcGVjdG9yU2VydmljZSxcbiAgc3RhcnRJbnN0YWxsYXRpb25Qcm94eVNlcnZpY2UsIHN0YXJ0U2ltdWxhdGVMb2NhdGlvblNlcnZpY2UsXG4gIHN0YXJ0QWZjU2VydmljZSwgc3RhcnROb3RpZmljYXRpb25Qcm94eVNlcnZpY2UsXG4gIHN0YXJ0SG91c2VBcnJlc3RTZXJ2aWNlXG59O1xuIl0sImZpbGUiOiJsaWIvc2VydmljZXMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
