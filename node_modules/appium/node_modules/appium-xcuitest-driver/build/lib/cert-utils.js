"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.doesSupportKeychainApi = void 0;
exports.hasCertificateLegacy = hasCertificateLegacy;
exports.installCertificate = installCertificate;
exports.installCertificateLegacy = installCertificateLegacy;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumIosSimulator = require("appium-ios-simulator");

const doesSupportKeychainApi = _lodash.default.memoize(async function doesSupportKeychainApi(device) {
  try {
    await device.simctl.exec('help', {
      args: ['keychain']
    });
    return true;
  } catch (e) {
    return false;
  }
});

exports.doesSupportKeychainApi = doesSupportKeychainApi;

async function installCertificate(device, payload) {
  await device.simctl.addRootCertificate(payload, {
    raw: true
  });
}

async function hasCertificateLegacy(device, payload) {
  return await (0, _appiumIosSimulator.hasSSLCert)(payload, device.udid);
}

async function installCertificateLegacy(device, payload) {
  await (0, _appiumIosSimulator.installSSLCert)(payload, device.udid);
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jZXJ0LXV0aWxzLmpzIl0sIm5hbWVzIjpbImRvZXNTdXBwb3J0S2V5Y2hhaW5BcGkiLCJfIiwibWVtb2l6ZSIsImRldmljZSIsInNpbWN0bCIsImV4ZWMiLCJhcmdzIiwiZSIsImluc3RhbGxDZXJ0aWZpY2F0ZSIsInBheWxvYWQiLCJhZGRSb290Q2VydGlmaWNhdGUiLCJyYXciLCJoYXNDZXJ0aWZpY2F0ZUxlZ2FjeSIsInVkaWQiLCJpbnN0YWxsQ2VydGlmaWNhdGVMZWdhY3kiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBUUEsTUFBTUEsc0JBQXNCLEdBQUdDLGdCQUFFQyxPQUFGLENBQVUsZUFBZUYsc0JBQWYsQ0FBdUNHLE1BQXZDLEVBQStDO0FBQ3RGLE1BQUk7QUFDRixVQUFNQSxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsSUFBZCxDQUFtQixNQUFuQixFQUEyQjtBQUMvQkMsTUFBQUEsSUFBSSxFQUFFLENBQUMsVUFBRDtBQUR5QixLQUEzQixDQUFOO0FBR0EsV0FBTyxJQUFQO0FBQ0QsR0FMRCxDQUtFLE9BQU9DLENBQVAsRUFBVTtBQUNWLFdBQU8sS0FBUDtBQUNEO0FBQ0YsQ0FUOEIsQ0FBL0I7Ozs7QUFrQkEsZUFBZUMsa0JBQWYsQ0FBbUNMLE1BQW5DLEVBQTJDTSxPQUEzQyxFQUFvRDtBQUNsRCxRQUFNTixNQUFNLENBQUNDLE1BQVAsQ0FBY00sa0JBQWQsQ0FBaUNELE9BQWpDLEVBQTBDO0FBQUNFLElBQUFBLEdBQUcsRUFBRTtBQUFOLEdBQTFDLENBQU47QUFDRDs7QUFXRCxlQUFlQyxvQkFBZixDQUFxQ1QsTUFBckMsRUFBNkNNLE9BQTdDLEVBQXNEO0FBQ3BELFNBQU8sTUFBTSxvQ0FBV0EsT0FBWCxFQUFvQk4sTUFBTSxDQUFDVSxJQUEzQixDQUFiO0FBQ0Q7O0FBVUQsZUFBZUMsd0JBQWYsQ0FBeUNYLE1BQXpDLEVBQWlETSxPQUFqRCxFQUEwRDtBQUN4RCxRQUFNLHdDQUFlQSxPQUFmLEVBQXdCTixNQUFNLENBQUNVLElBQS9CLENBQU47QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBpbnN0YWxsU1NMQ2VydCwgaGFzU1NMQ2VydCB9IGZyb20gJ2FwcGl1bS1pb3Mtc2ltdWxhdG9yJztcblxuLyoqXG4gKiBDaGVjayB3aGV0aGVyIHRoZSBnaXZlbiBTaW11bGF0b3IgZGV2aWNlIHN1cHBvcnRzIHNpbWN0bCBrZXljaGFpbiBBUEkuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGRldmljZSBTaW11bGF0b3IgaW5zdGFuY2UgY3JlYXRlZCBieSBhcHBpdW0taW9zLXNpbXVsYXRvciBtb2R1bGVcbiAqIEByZXR1cm5zIHtib29sZWFufSBgdHJ1ZWAgaWYgdGhlIGN1cnJlbnQgU2ltdWxhdG9yIFNESyBzdXBwb3J0cyBrZXljaGFpbiBjb21tYW5kcy5cbiAqL1xuY29uc3QgZG9lc1N1cHBvcnRLZXljaGFpbkFwaSA9IF8ubWVtb2l6ZShhc3luYyBmdW5jdGlvbiBkb2VzU3VwcG9ydEtleWNoYWluQXBpIChkZXZpY2UpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBkZXZpY2Uuc2ltY3RsLmV4ZWMoJ2hlbHAnLCB7XG4gICAgICBhcmdzOiBbJ2tleWNoYWluJ11cbiAgICB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufSk7XG5cbi8qKlxuICogQWRkcyBhIGNlcnRpZmljYXRlIHRvIHRoZSB0cnVzdGVkIHJvb3Qgc3RvcmUuXG4gKiBTaW11bGF0b3IgbXVzdCBiZSBpbiBCT09URUQgc3RhdGUgZm9yIHRoaXMgQVBJIHRvIHdvcmsuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGRldmljZSBTaW11bGF0b3IgaW5zdGFuY2UgY3JlYXRlZCBieSBhcHBpdW0taW9zLXNpbXVsYXRvciBtb2R1bGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXlsb2FkIENlcnRpZmljYXRlIHBheWxvYWRcbiAqL1xuYXN5bmMgZnVuY3Rpb24gaW5zdGFsbENlcnRpZmljYXRlIChkZXZpY2UsIHBheWxvYWQpIHtcbiAgYXdhaXQgZGV2aWNlLnNpbWN0bC5hZGRSb290Q2VydGlmaWNhdGUocGF5bG9hZCwge3JhdzogdHJ1ZX0pO1xufVxuXG4vKipcbiAqIENoZWNrIHdoZXRoZXIgdGhlIGdpdmVuIGNlcnRpZmljYXRlIGlzIGFscmVhZHkgaW5zdGFsbGVkLlxuICogVGhlIGZ1bmN0aW9uIGlzIHVzaW5nIGhhY2t5IGNhbGxzIHRvIG1ha2UgY2VydGlmaWNhdGUgc3R1ZmYgd29ya2luZyBmb3Igb2xkZXIgU0RLcy5cbiAqIFNpbXVsYXRvciBtdXN0IGJlIGluIFNIVVRET1dOIHN0YXRlIGZvciB0aGlzIEFQSSB0byB3b3JrLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBkZXZpY2UgU2ltdWxhdG9yIGluc3RhbmNlIGNyZWF0ZWQgYnkgYXBwaXVtLWlvcy1zaW11bGF0b3IgbW9kdWxlXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF5bG9hZCBDZXJ0aWZpY2F0ZSBwYXlsb2FkXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gYHRydWVgIGlmIHRoZSBjZXJ0aWZpY2F0ZSBpcyBhbHJlYWR5IHByZXNlbnQgaW4gdGhlIHJvb3Qgc3RvcmUuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGhhc0NlcnRpZmljYXRlTGVnYWN5IChkZXZpY2UsIHBheWxvYWQpIHtcbiAgcmV0dXJuIGF3YWl0IGhhc1NTTENlcnQocGF5bG9hZCwgZGV2aWNlLnVkaWQpO1xufVxuXG4vKipcbiAqIEFkZHMgYSBjZXJ0aWZpY2F0ZSB0byB0aGUgdHJ1c3RlZCByb290IHN0b3JlLlxuICogVGhlIGZ1bmN0aW9uIGlzIHVzaW5nIGhhY2t5IGNhbGxzIHRvIG1ha2UgY2VydGlmaWNhdGUgc3R1ZmYgd29ya2luZyBmb3Igb2xkZXIgU0RLcy5cbiAqIFNpbXVsYXRvciBtdXN0IGJlIGluIFNIVVRET1dOIHN0YXRlIGZvciB0aGlzIEFQSSB0byB3b3JrLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBkZXZpY2UgU2ltdWxhdG9yIGluc3RhbmNlIGNyZWF0ZWQgYnkgYXBwaXVtLWlvcy1zaW11bGF0b3IgbW9kdWxlXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF5bG9hZCBDZXJ0aWZpY2F0ZSBwYXlsb2FkXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGluc3RhbGxDZXJ0aWZpY2F0ZUxlZ2FjeSAoZGV2aWNlLCBwYXlsb2FkKSB7XG4gIGF3YWl0IGluc3RhbGxTU0xDZXJ0KHBheWxvYWQsIGRldmljZS51ZGlkKTtcbn1cblxuXG5leHBvcnQge1xuICBkb2VzU3VwcG9ydEtleWNoYWluQXBpLCBpbnN0YWxsQ2VydGlmaWNhdGUsIGluc3RhbGxDZXJ0aWZpY2F0ZUxlZ2FjeSxcbiAgaGFzQ2VydGlmaWNhdGVMZWdhY3lcbn07XG4iXSwiZmlsZSI6ImxpYi9jZXJ0LXV0aWxzLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uIn0=
