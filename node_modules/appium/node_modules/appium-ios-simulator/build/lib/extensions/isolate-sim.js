"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = void 0;
exports.getAllUdids = getAllUdids;

require("source-map-support/register");

var _nodeSimctl = _interopRequireDefault(require("node-simctl"));

var _logger = _interopRequireDefault(require("../logger"));

var _lodash = _interopRequireDefault(require("lodash"));

let extensions = {};
exports.extensions = extensions;

async function getAllUdids(simctl) {
  let devices = await simctl.getDevices();
  return _lodash.default.chain(devices).values().flatten().map('udid').value();
}

extensions.isolateSim = async function isolateSim() {
  _logger.default.debug('Isolating the requested simulator by deleting all others');

  const simctl = new _nodeSimctl.default();
  const udids = await getAllUdids(simctl);

  for (const udid of _lodash.default.without(udids, this.udid)) {
    simctl.udid = udid;
    await simctl.deleteDevice();
  }
};require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9leHRlbnNpb25zL2lzb2xhdGUtc2ltLmpzIl0sIm5hbWVzIjpbImV4dGVuc2lvbnMiLCJnZXRBbGxVZGlkcyIsInNpbWN0bCIsImRldmljZXMiLCJnZXREZXZpY2VzIiwiXyIsImNoYWluIiwidmFsdWVzIiwiZmxhdHRlbiIsIm1hcCIsInZhbHVlIiwiaXNvbGF0ZVNpbSIsImxvZyIsImRlYnVnIiwiU2ltY3RsIiwidWRpZHMiLCJ1ZGlkIiwid2l0aG91dCIsImRlbGV0ZURldmljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBR0EsSUFBSUEsVUFBVSxHQUFHLEVBQWpCOzs7QUFFQSxlQUFlQyxXQUFmLENBQTRCQyxNQUE1QixFQUFvQztBQUNsQyxNQUFJQyxPQUFPLEdBQUcsTUFBTUQsTUFBTSxDQUFDRSxVQUFQLEVBQXBCO0FBRUEsU0FBT0MsZ0JBQUVDLEtBQUYsQ0FBUUgsT0FBUixFQUNKSSxNQURJLEdBRUpDLE9BRkksR0FHSkMsR0FISSxDQUdBLE1BSEEsRUFJSkMsS0FKSSxFQUFQO0FBS0Q7O0FBRURWLFVBQVUsQ0FBQ1csVUFBWCxHQUF3QixlQUFlQSxVQUFmLEdBQTZCO0FBQ25EQyxrQkFBSUMsS0FBSixDQUFVLDBEQUFWOztBQUNBLFFBQU1YLE1BQU0sR0FBRyxJQUFJWSxtQkFBSixFQUFmO0FBQ0EsUUFBTUMsS0FBSyxHQUFHLE1BQU1kLFdBQVcsQ0FBQ0MsTUFBRCxDQUEvQjs7QUFFQSxPQUFLLE1BQU1jLElBQVgsSUFBbUJYLGdCQUFFWSxPQUFGLENBQVVGLEtBQVYsRUFBaUIsS0FBS0MsSUFBdEIsQ0FBbkIsRUFBZ0Q7QUFDOUNkLElBQUFBLE1BQU0sQ0FBQ2MsSUFBUCxHQUFjQSxJQUFkO0FBQ0EsVUFBTWQsTUFBTSxDQUFDZ0IsWUFBUCxFQUFOO0FBQ0Q7QUFDRixDQVREIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNpbWN0bCBmcm9tICdub2RlLXNpbWN0bCc7XG5pbXBvcnQgbG9nIGZyb20gJy4uL2xvZ2dlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5cbmxldCBleHRlbnNpb25zID0ge307XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFsbFVkaWRzIChzaW1jdGwpIHtcbiAgbGV0IGRldmljZXMgPSBhd2FpdCBzaW1jdGwuZ2V0RGV2aWNlcygpO1xuXG4gIHJldHVybiBfLmNoYWluKGRldmljZXMpXG4gICAgLnZhbHVlcygpXG4gICAgLmZsYXR0ZW4oKVxuICAgIC5tYXAoJ3VkaWQnKVxuICAgIC52YWx1ZSgpO1xufVxuXG5leHRlbnNpb25zLmlzb2xhdGVTaW0gPSBhc3luYyBmdW5jdGlvbiBpc29sYXRlU2ltICgpIHtcbiAgbG9nLmRlYnVnKCdJc29sYXRpbmcgdGhlIHJlcXVlc3RlZCBzaW11bGF0b3IgYnkgZGVsZXRpbmcgYWxsIG90aGVycycpO1xuICBjb25zdCBzaW1jdGwgPSBuZXcgU2ltY3RsKCk7XG4gIGNvbnN0IHVkaWRzID0gYXdhaXQgZ2V0QWxsVWRpZHMoc2ltY3RsKTtcblxuICBmb3IgKGNvbnN0IHVkaWQgb2YgXy53aXRob3V0KHVkaWRzLCB0aGlzLnVkaWQpKSB7XG4gICAgc2ltY3RsLnVkaWQgPSB1ZGlkO1xuICAgIGF3YWl0IHNpbWN0bC5kZWxldGVEZXZpY2UoKTtcbiAgfVxufTtcblxuXG5leHBvcnQgeyBleHRlbnNpb25zLCBnZXRBbGxVZGlkcyB9O1xuIl0sImZpbGUiOiJsaWIvZXh0ZW5zaW9ucy9pc29sYXRlLXNpbS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
