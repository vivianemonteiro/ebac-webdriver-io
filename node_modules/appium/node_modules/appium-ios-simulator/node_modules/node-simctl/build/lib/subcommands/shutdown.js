"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _logger = _interopRequireWildcard(require("../logger"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const commands = {};

commands.shutdownDevice = async function shutdownDevice() {
  try {
    await this.exec('shutdown', {
      args: [this.requireUdid('shutdown')]
    });
  } catch (e) {
    if (!_lodash.default.includes(e.message, 'current state: Shutdown')) {
      throw e;
    }

    _logger.default.debug(_logger.LOG_PREFIX, `Simulator already in 'Shutdown' state. Continuing`);
  }
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zdWJjb21tYW5kcy9zaHV0ZG93bi5qcyJdLCJuYW1lcyI6WyJjb21tYW5kcyIsInNodXRkb3duRGV2aWNlIiwiZXhlYyIsImFyZ3MiLCJyZXF1aXJlVWRpZCIsImUiLCJfIiwiaW5jbHVkZXMiLCJtZXNzYWdlIiwibG9nIiwiZGVidWciLCJMT0dfUFJFRklYIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxRQUFRLEdBQUcsRUFBakI7O0FBU0FBLFFBQVEsQ0FBQ0MsY0FBVCxHQUEwQixlQUFlQSxjQUFmLEdBQWlDO0FBQ3pELE1BQUk7QUFDRixVQUFNLEtBQUtDLElBQUwsQ0FBVSxVQUFWLEVBQXNCO0FBQzFCQyxNQUFBQSxJQUFJLEVBQUUsQ0FBQyxLQUFLQyxXQUFMLENBQWlCLFVBQWpCLENBQUQ7QUFEb0IsS0FBdEIsQ0FBTjtBQUdELEdBSkQsQ0FJRSxPQUFPQyxDQUFQLEVBQVU7QUFDVixRQUFJLENBQUNDLGdCQUFFQyxRQUFGLENBQVdGLENBQUMsQ0FBQ0csT0FBYixFQUFzQix5QkFBdEIsQ0FBTCxFQUF1RDtBQUNyRCxZQUFNSCxDQUFOO0FBQ0Q7O0FBQ0RJLG9CQUFJQyxLQUFKLENBQVVDLGtCQUFWLEVBQXVCLG1EQUF2QjtBQUNEO0FBQ0YsQ0FYRDs7ZUFhZVgsUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgbG9nLCB7IExPR19QUkVGSVggfSBmcm9tICcuLi9sb2dnZXInO1xuXG5jb25zdCBjb21tYW5kcyA9IHt9O1xuXG4vKipcbiAqIFNodXRkb3duIHRoZSBnaXZlbiBTaW11bGF0b3IgaWYgaXQgaXMgcnVubmluZy5cbiAqXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGNvcnJlc3BvbmRpbmcgc2ltY3RsIHN1YmNvbW1hbmQgY29tbWFuZFxuICogICAgICAgICAgICAgICAgIHJldHVybnMgbm9uLXplcm8gcmV0dXJuIGNvZGUuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGB1ZGlkYCBpbnN0YW5jZSBwcm9wZXJ0eSBpcyB1bnNldFxuICovXG5jb21tYW5kcy5zaHV0ZG93bkRldmljZSA9IGFzeW5jIGZ1bmN0aW9uIHNodXRkb3duRGV2aWNlICgpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCB0aGlzLmV4ZWMoJ3NodXRkb3duJywge1xuICAgICAgYXJnczogW3RoaXMucmVxdWlyZVVkaWQoJ3NodXRkb3duJyldLFxuICAgIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKCFfLmluY2x1ZGVzKGUubWVzc2FnZSwgJ2N1cnJlbnQgc3RhdGU6IFNodXRkb3duJykpIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICAgIGxvZy5kZWJ1ZyhMT0dfUFJFRklYLCBgU2ltdWxhdG9yIGFscmVhZHkgaW4gJ1NodXRkb3duJyBzdGF0ZS4gQ29udGludWluZ2ApO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb21tYW5kcztcbiJdLCJmaWxlIjoibGliL3N1YmNvbW1hbmRzL3NodXRkb3duLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
