"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

const commands = {};

commands.grantPermission = async function grantPermission(bundleId, perm) {
  await this.exec('privacy', {
    args: [this.requireUdid('privacy grant'), 'grant', perm, bundleId]
  });
};

commands.revokePermission = async function revokePermission(bundleId, perm) {
  await this.exec('privacy', {
    args: [this.requireUdid('privacy revoke'), 'revoke', perm, bundleId]
  });
};

commands.resetPermission = async function resetPermission(bundleId, perm) {
  await this.exec('privacy', {
    args: [this.requireUdid('private reset'), 'reset', perm, bundleId]
  });
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zdWJjb21tYW5kcy9wcml2YWN5LmpzIl0sIm5hbWVzIjpbImNvbW1hbmRzIiwiZ3JhbnRQZXJtaXNzaW9uIiwiYnVuZGxlSWQiLCJwZXJtIiwiZXhlYyIsImFyZ3MiLCJyZXF1aXJlVWRpZCIsInJldm9rZVBlcm1pc3Npb24iLCJyZXNldFBlcm1pc3Npb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE1BQU1BLFFBQVEsR0FBRyxFQUFqQjs7QUEwQkFBLFFBQVEsQ0FBQ0MsZUFBVCxHQUEyQixlQUFlQSxlQUFmLENBQWdDQyxRQUFoQyxFQUEwQ0MsSUFBMUMsRUFBZ0Q7QUFDekUsUUFBTSxLQUFLQyxJQUFMLENBQVUsU0FBVixFQUFxQjtBQUN6QkMsSUFBQUEsSUFBSSxFQUFFLENBQUMsS0FBS0MsV0FBTCxDQUFpQixlQUFqQixDQUFELEVBQW9DLE9BQXBDLEVBQTZDSCxJQUE3QyxFQUFtREQsUUFBbkQ7QUFEbUIsR0FBckIsQ0FBTjtBQUdELENBSkQ7O0FBa0JBRixRQUFRLENBQUNPLGdCQUFULEdBQTRCLGVBQWVBLGdCQUFmLENBQWlDTCxRQUFqQyxFQUEyQ0MsSUFBM0MsRUFBaUQ7QUFDM0UsUUFBTSxLQUFLQyxJQUFMLENBQVUsU0FBVixFQUFxQjtBQUN6QkMsSUFBQUEsSUFBSSxFQUFFLENBQUMsS0FBS0MsV0FBTCxDQUFpQixnQkFBakIsQ0FBRCxFQUFxQyxRQUFyQyxFQUErQ0gsSUFBL0MsRUFBcURELFFBQXJEO0FBRG1CLEdBQXJCLENBQU47QUFHRCxDQUpEOztBQWtCQUYsUUFBUSxDQUFDUSxlQUFULEdBQTJCLGVBQWVBLGVBQWYsQ0FBZ0NOLFFBQWhDLEVBQTBDQyxJQUExQyxFQUFnRDtBQUN6RSxRQUFNLEtBQUtDLElBQUwsQ0FBVSxTQUFWLEVBQXFCO0FBQ3pCQyxJQUFBQSxJQUFJLEVBQUUsQ0FBQyxLQUFLQyxXQUFMLENBQWlCLGVBQWpCLENBQUQsRUFBb0MsT0FBcEMsRUFBNkNILElBQTdDLEVBQW1ERCxRQUFuRDtBQURtQixHQUFyQixDQUFOO0FBR0QsQ0FKRDs7ZUFNZUYsUSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbW1hbmRzID0ge307XG5cbi8qKlxuICogR3JhbnRzIHRoZSBnaXZlbiBwZXJtaXNzaW9uIG9uIHRoZSBhcHAgd2l0aCB0aGUgZ2l2ZW4gYnVuZGxlIGlkZW50aWZpZXJcbiAqXG4gKiBAc2luY2UgWGNvZGUgMTEuNCBTREtcbiAqIEBwYXJhbSB7c3RyaW5nfSBidW5kbGVJZCB0aGUgaWRlbnRpZmllciBvZiB0aGUgYXBwbGljYXRpb24gd2hvc2VcbiAqIHByaXZhY3kgc2V0dGluZ3MgYXJlIGdvaW5nIHRvIGJlIGNoYW5nZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBwZXJtIG9uZSBvZiBwb3NzaWJsZSBwZXJtaXNzaW9uIHZhbHVlczpcbiAqIC0gYWxsOiBBcHBseSB0aGUgYWN0aW9uIHRvIGFsbCBzZXJ2aWNlcy5cbiAqIC0gY2FsZW5kYXI6IEFsbG93IGFjY2VzcyB0byBjYWxlbmRhci5cbiAqIC0gY29udGFjdHMtbGltaXRlZDogQWxsb3cgYWNjZXNzIHRvIGJhc2ljIGNvbnRhY3QgaW5mby5cbiAqIC0gY29udGFjdHM6IEFsbG93IGFjY2VzcyB0byBmdWxsIGNvbnRhY3QgZGV0YWlscy5cbiAqIC0gbG9jYXRpb246IEFsbG93IGFjY2VzcyB0byBsb2NhdGlvbiBzZXJ2aWNlcyB3aGVuIGFwcCBpcyBpbiB1c2UuXG4gKiAtIGxvY2F0aW9uLWFsd2F5czogQWxsb3cgYWNjZXNzIHRvIGxvY2F0aW9uIHNlcnZpY2VzIGF0IGFsbCB0aW1lcy5cbiAqIC0gcGhvdG9zLWFkZDogQWxsb3cgYWRkaW5nIHBob3RvcyB0byB0aGUgcGhvdG8gbGlicmFyeS5cbiAqIC0gcGhvdG9zOiBBbGxvdyBmdWxsIGFjY2VzcyB0byB0aGUgcGhvdG8gbGlicmFyeS5cbiAqIC0gbWVkaWEtbGlicmFyeTogQWxsb3cgYWNjZXNzIHRvIHRoZSBtZWRpYSBsaWJyYXJ5LlxuICogLSBtaWNyb3Bob25lOiBBbGxvdyBhY2Nlc3MgdG8gYXVkaW8gaW5wdXQuXG4gKiAtIG1vdGlvbjogQWxsb3cgYWNjZXNzIHRvIG1vdGlvbiBhbmQgZml0bmVzcyBkYXRhLlxuICogLSByZW1pbmRlcnM6IEFsbG93IGFjY2VzcyB0byByZW1pbmRlcnMuXG4gKiAtIHNpcmk6IEFsbG93IHVzZSBvZiB0aGUgYXBwIHdpdGggU2lyaS5cbiAqIEB0aHJvd3Mge0Vycm9yfSBpZiB0aGUgY3VycmVudCBTREsgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHRoZSBjb21tYW5kXG4gKiBvciB0aGVyZSB3YXMgYW4gZXJyb3Igd2hpbGUgZ3JhbnRpbmcgdGhlIHBlcm1pc3Npb25cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgYHVkaWRgIGluc3RhbmNlIHByb3BlcnR5IGlzIHVuc2V0XG4gKi9cbmNvbW1hbmRzLmdyYW50UGVybWlzc2lvbiA9IGFzeW5jIGZ1bmN0aW9uIGdyYW50UGVybWlzc2lvbiAoYnVuZGxlSWQsIHBlcm0pIHtcbiAgYXdhaXQgdGhpcy5leGVjKCdwcml2YWN5Jywge1xuICAgIGFyZ3M6IFt0aGlzLnJlcXVpcmVVZGlkKCdwcml2YWN5IGdyYW50JyksICdncmFudCcsIHBlcm0sIGJ1bmRsZUlkXSxcbiAgfSk7XG59O1xuXG4vKipcbiAqIFJldm9rZXMgdGhlIGdpdmVuIHBlcm1pc3Npb24gb24gdGhlIGFwcCB3aXRoIHRoZSBnaXZlbiBidW5kbGUgaWRlbnRpZmllclxuICogYWZ0ZXIgaXQgaGFzIGJlZW4gZ3JhbnRlZFxuICpcbiAqIEBzaW5jZSBYY29kZSAxMS40IFNES1xuICogQHBhcmFtIHtzdHJpbmd9IGJ1bmRsZUlkIHRoZSBpZGVudGlmaWVyIG9mIHRoZSBhcHBsaWNhdGlvbiB3aG9zZVxuICogcHJpdmFjeSBzZXR0aW5ncyBhcmUgZ29pbmcgdG8gYmUgY2hhbmdlZFxuICogQHBhcmFtIHtzdHJpbmd9IHBlcm0gb25lIG9mIHBvc3NpYmxlIHBlcm1pc3Npb24gdmFsdWVzIChzZWUgYGdyYW50UGVybWlzc2lvbmApXG4gKiBAdGhyb3dzIHtFcnJvcn0gaWYgdGhlIGN1cnJlbnQgU0RLIHZlcnNpb24gZG9lcyBub3Qgc3VwcG9ydCB0aGUgY29tbWFuZFxuICogb3IgdGhlcmUgd2FzIGFuIGVycm9yIHdoaWxlIHJldm9raW5nIHRoZSBwZXJtaXNzaW9uXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGB1ZGlkYCBpbnN0YW5jZSBwcm9wZXJ0eSBpcyB1bnNldFxuICovXG5jb21tYW5kcy5yZXZva2VQZXJtaXNzaW9uID0gYXN5bmMgZnVuY3Rpb24gcmV2b2tlUGVybWlzc2lvbiAoYnVuZGxlSWQsIHBlcm0pIHtcbiAgYXdhaXQgdGhpcy5leGVjKCdwcml2YWN5Jywge1xuICAgIGFyZ3M6IFt0aGlzLnJlcXVpcmVVZGlkKCdwcml2YWN5IHJldm9rZScpLCAncmV2b2tlJywgcGVybSwgYnVuZGxlSWRdLFxuICB9KTtcbn07XG5cbi8qKlxuICogUmVzZXRzIHRoZSBnaXZlbiBwZXJtaXNzaW9uIG9uIHRoZSBhcHAgd2l0aCB0aGUgZ2l2ZW4gYnVuZGxlIGlkZW50aWZpZXJcbiAqIHRvIGl0cyBkZWZhdWx0IHN0YXRlXG4gKlxuICogQHNpbmNlIFhjb2RlIDExLjQgU0RLXG4gKiBAcGFyYW0ge3N0cmluZ30gYnVuZGxlSWQgdGhlIGlkZW50aWZpZXIgb2YgdGhlIGFwcGxpY2F0aW9uIHdob3NlXG4gKiBwcml2YWN5IHNldHRpbmdzIGFyZSBnb2luZyB0byBiZSBjaGFuZ2VkXG4gKiBAcGFyYW0ge3N0cmluZ30gcGVybSBvbmUgb2YgcG9zc2libGUgcGVybWlzc2lvbiB2YWx1ZXMgKHNlZSBgZ3JhbnRQZXJtaXNzaW9uYClcbiAqIEB0aHJvd3Mge0Vycm9yfSBpZiB0aGUgY3VycmVudCBTREsgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHRoZSBjb21tYW5kXG4gKiBvciB0aGVyZSB3YXMgYW4gZXJyb3Igd2hpbGUgcmVzZXR0aW5nIHRoZSBwZXJtaXNzaW9uXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGB1ZGlkYCBpbnN0YW5jZSBwcm9wZXJ0eSBpcyB1bnNldFxuICovXG5jb21tYW5kcy5yZXNldFBlcm1pc3Npb24gPSBhc3luYyBmdW5jdGlvbiByZXNldFBlcm1pc3Npb24gKGJ1bmRsZUlkLCBwZXJtKSB7XG4gIGF3YWl0IHRoaXMuZXhlYygncHJpdmFjeScsIHtcbiAgICBhcmdzOiBbdGhpcy5yZXF1aXJlVWRpZCgncHJpdmF0ZSByZXNldCcpLCAncmVzZXQnLCBwZXJtLCBidW5kbGVJZF0sXG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tbWFuZHM7XG4iXSwiZmlsZSI6ImxpYi9zdWJjb21tYW5kcy9wcml2YWN5LmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
