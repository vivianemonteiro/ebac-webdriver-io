"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _logger = _interopRequireWildcard(require("../logger"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const commands = {};

commands.bootDevice = async function bootDevice() {
  try {
    await this.exec('boot', {
      args: [this.requireUdid('boot')]
    });
  } catch (e) {
    if (_lodash.default.includes(e.message, 'Unable to boot device in current state: Booted')) {
      throw e;
    }

    _logger.default.debug(_logger.LOG_PREFIX, `Simulator already in 'Booted' state. Continuing`);
  }
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zdWJjb21tYW5kcy9ib290LmpzIl0sIm5hbWVzIjpbImNvbW1hbmRzIiwiYm9vdERldmljZSIsImV4ZWMiLCJhcmdzIiwicmVxdWlyZVVkaWQiLCJlIiwiXyIsImluY2x1ZGVzIiwibWVzc2FnZSIsImxvZyIsImRlYnVnIiwiTE9HX1BSRUZJWCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7O0FBR0EsTUFBTUEsUUFBUSxHQUFHLEVBQWpCOztBQVNBQSxRQUFRLENBQUNDLFVBQVQsR0FBc0IsZUFBZUEsVUFBZixHQUE2QjtBQUNqRCxNQUFJO0FBQ0YsVUFBTSxLQUFLQyxJQUFMLENBQVUsTUFBVixFQUFrQjtBQUN0QkMsTUFBQUEsSUFBSSxFQUFFLENBQUMsS0FBS0MsV0FBTCxDQUFpQixNQUFqQixDQUFEO0FBRGdCLEtBQWxCLENBQU47QUFHRCxHQUpELENBSUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1YsUUFBSUMsZ0JBQUVDLFFBQUYsQ0FBV0YsQ0FBQyxDQUFDRyxPQUFiLEVBQXNCLGdEQUF0QixDQUFKLEVBQTZFO0FBQzNFLFlBQU1ILENBQU47QUFDRDs7QUFDREksb0JBQUlDLEtBQUosQ0FBVUMsa0JBQVYsRUFBdUIsaURBQXZCO0FBQ0Q7QUFDRixDQVhEOztlQWFlWCxRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBsb2csIHsgTE9HX1BSRUZJWCB9IGZyb20gJy4uL2xvZ2dlcic7XG5cblxuY29uc3QgY29tbWFuZHMgPSB7fTtcblxuLyoqXG4gKiBCb290IHRoZSBwYXJ0aWN1bGFyIFNpbXVsYXRvciBpZiBpdCBpcyBub3QgcnVubmluZy5cbiAqXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGNvcnJlc3BvbmRpbmcgc2ltY3RsIHN1YmNvbW1hbmQgY29tbWFuZFxuICogICAgICAgICAgICAgICAgIHJldHVybnMgbm9uLXplcm8gcmV0dXJuIGNvZGUuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIGB1ZGlkYCBpbnN0YW5jZSBwcm9wZXJ0eSBpcyB1bnNldFxuICovXG5jb21tYW5kcy5ib290RGV2aWNlID0gYXN5bmMgZnVuY3Rpb24gYm9vdERldmljZSAoKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgdGhpcy5leGVjKCdib290Jywge1xuICAgICAgYXJnczogW3RoaXMucmVxdWlyZVVkaWQoJ2Jvb3QnKV1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChfLmluY2x1ZGVzKGUubWVzc2FnZSwgJ1VuYWJsZSB0byBib290IGRldmljZSBpbiBjdXJyZW50IHN0YXRlOiBCb290ZWQnKSkge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gICAgbG9nLmRlYnVnKExPR19QUkVGSVgsIGBTaW11bGF0b3IgYWxyZWFkeSBpbiAnQm9vdGVkJyBzdGF0ZS4gQ29udGludWluZ2ApO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb21tYW5kcztcbiJdLCJmaWxlIjoibGliL3N1YmNvbW1hbmRzL2Jvb3QuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
