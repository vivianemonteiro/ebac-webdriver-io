"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IDB = exports.default = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _index = _interopRequireDefault(require("./tools/index.js"));

var _helpers = require("./helpers");

const DEFAULT_OPTS = {
  udid: null,
  executable: {
    path: _helpers.IDB_EXECUTABLE,
    port: null,
    grpcPort: null,
    defaultArgs: []
  },
  logLevel: null,
  companion: {
    path: _helpers.IDB_COMPANION_EXECUTABLE,
    port: null,
    grpcPort: null,
    logPath: null
  },
  execTimeout: _helpers.DEFAULT_IDB_EXEC_TIMEOUT,
  verbose: false
};

class IDB {
  constructor(opts = {}) {
    Object.assign(this, opts);

    _lodash.default.defaultsDeep(this, _lodash.default.cloneDeep(DEFAULT_OPTS));

    if (!this.udid) {
      throw new Error(`UDID must be set for idb`);
    }

    this.executable.defaultArgs.push('--udid', this.udid);

    if (this.logLevel) {
      this.executable.defaultArgs.push('--log', this.logLevel);
    }
  }

}

exports.IDB = IDB;

for (const [fnName, fn] of _lodash.default.toPairs(_index.default)) {
  IDB.prototype[fnName] = fn;
}

var _default = IDB;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pZGIuanMiXSwibmFtZXMiOlsiREVGQVVMVF9PUFRTIiwidWRpZCIsImV4ZWN1dGFibGUiLCJwYXRoIiwiSURCX0VYRUNVVEFCTEUiLCJwb3J0IiwiZ3JwY1BvcnQiLCJkZWZhdWx0QXJncyIsImxvZ0xldmVsIiwiY29tcGFuaW9uIiwiSURCX0NPTVBBTklPTl9FWEVDVVRBQkxFIiwibG9nUGF0aCIsImV4ZWNUaW1lb3V0IiwiREVGQVVMVF9JREJfRVhFQ19USU1FT1VUIiwidmVyYm9zZSIsIklEQiIsImNvbnN0cnVjdG9yIiwib3B0cyIsIk9iamVjdCIsImFzc2lnbiIsIl8iLCJkZWZhdWx0c0RlZXAiLCJjbG9uZURlZXAiLCJFcnJvciIsInB1c2giLCJmbk5hbWUiLCJmbiIsInRvUGFpcnMiLCJtZXRob2RzIiwicHJvdG90eXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUtBLE1BQU1BLFlBQVksR0FBRztBQUNuQkMsRUFBQUEsSUFBSSxFQUFFLElBRGE7QUFFbkJDLEVBQUFBLFVBQVUsRUFBRTtBQUNWQyxJQUFBQSxJQUFJLEVBQUVDLHVCQURJO0FBRVZDLElBQUFBLElBQUksRUFBRSxJQUZJO0FBR1ZDLElBQUFBLFFBQVEsRUFBRSxJQUhBO0FBSVZDLElBQUFBLFdBQVcsRUFBRTtBQUpILEdBRk87QUFRbkJDLEVBQUFBLFFBQVEsRUFBRSxJQVJTO0FBU25CQyxFQUFBQSxTQUFTLEVBQUU7QUFDVE4sSUFBQUEsSUFBSSxFQUFFTyxpQ0FERztBQUVUTCxJQUFBQSxJQUFJLEVBQUUsSUFGRztBQUdUQyxJQUFBQSxRQUFRLEVBQUUsSUFIRDtBQUlUSyxJQUFBQSxPQUFPLEVBQUU7QUFKQSxHQVRRO0FBZW5CQyxFQUFBQSxXQUFXLEVBQUVDLGlDQWZNO0FBZ0JuQkMsRUFBQUEsT0FBTyxFQUFFO0FBaEJVLENBQXJCOztBQW1CQSxNQUFNQyxHQUFOLENBQVU7QUFDUkMsRUFBQUEsV0FBVyxDQUFFQyxJQUFJLEdBQUcsRUFBVCxFQUFhO0FBQ3RCQyxJQUFBQSxNQUFNLENBQUNDLE1BQVAsQ0FBYyxJQUFkLEVBQW9CRixJQUFwQjs7QUFDQUcsb0JBQUVDLFlBQUYsQ0FBZSxJQUFmLEVBQXFCRCxnQkFBRUUsU0FBRixDQUFZdEIsWUFBWixDQUFyQjs7QUFFQSxRQUFJLENBQUMsS0FBS0MsSUFBVixFQUFnQjtBQUNkLFlBQU0sSUFBSXNCLEtBQUosQ0FBVywwQkFBWCxDQUFOO0FBQ0Q7O0FBQ0QsU0FBS3JCLFVBQUwsQ0FBZ0JLLFdBQWhCLENBQTRCaUIsSUFBNUIsQ0FBaUMsUUFBakMsRUFBMkMsS0FBS3ZCLElBQWhEOztBQUVBLFFBQUksS0FBS08sUUFBVCxFQUFtQjtBQUNqQixXQUFLTixVQUFMLENBQWdCSyxXQUFoQixDQUE0QmlCLElBQTVCLENBQWlDLE9BQWpDLEVBQTBDLEtBQUtoQixRQUEvQztBQUNEO0FBQ0Y7O0FBYk87Ozs7QUFpQlYsS0FBSyxNQUFNLENBQUNpQixNQUFELEVBQVNDLEVBQVQsQ0FBWCxJQUEyQk4sZ0JBQUVPLE9BQUYsQ0FBVUMsY0FBVixDQUEzQixFQUErQztBQUM3Q2IsRUFBQUEsR0FBRyxDQUFDYyxTQUFKLENBQWNKLE1BQWQsSUFBd0JDLEVBQXhCO0FBQ0Q7O2VBRWNYLEciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IG1ldGhvZHMgZnJvbSAnLi90b29scy9pbmRleC5qcyc7XG5pbXBvcnQge1xuICBERUZBVUxUX0lEQl9FWEVDX1RJTUVPVVQsXG4gIElEQl9FWEVDVVRBQkxFLCBJREJfQ09NUEFOSU9OX0VYRUNVVEFCTEUsXG59IGZyb20gJy4vaGVscGVycyc7XG5cbmNvbnN0IERFRkFVTFRfT1BUUyA9IHtcbiAgdWRpZDogbnVsbCxcbiAgZXhlY3V0YWJsZToge1xuICAgIHBhdGg6IElEQl9FWEVDVVRBQkxFLFxuICAgIHBvcnQ6IG51bGwsXG4gICAgZ3JwY1BvcnQ6IG51bGwsXG4gICAgZGVmYXVsdEFyZ3M6IFtdLFxuICB9LFxuICBsb2dMZXZlbDogbnVsbCxcbiAgY29tcGFuaW9uOiB7XG4gICAgcGF0aDogSURCX0NPTVBBTklPTl9FWEVDVVRBQkxFLFxuICAgIHBvcnQ6IG51bGwsXG4gICAgZ3JwY1BvcnQ6IG51bGwsXG4gICAgbG9nUGF0aDogbnVsbCxcbiAgfSxcbiAgZXhlY1RpbWVvdXQ6IERFRkFVTFRfSURCX0VYRUNfVElNRU9VVCxcbiAgdmVyYm9zZTogZmFsc2UsXG59O1xuXG5jbGFzcyBJREIge1xuICBjb25zdHJ1Y3RvciAob3B0cyA9IHt9KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBvcHRzKTtcbiAgICBfLmRlZmF1bHRzRGVlcCh0aGlzLCBfLmNsb25lRGVlcChERUZBVUxUX09QVFMpKTtcblxuICAgIGlmICghdGhpcy51ZGlkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVESUQgbXVzdCBiZSBzZXQgZm9yIGlkYmApO1xuICAgIH1cbiAgICB0aGlzLmV4ZWN1dGFibGUuZGVmYXVsdEFyZ3MucHVzaCgnLS11ZGlkJywgdGhpcy51ZGlkKTtcblxuICAgIGlmICh0aGlzLmxvZ0xldmVsKSB7XG4gICAgICB0aGlzLmV4ZWN1dGFibGUuZGVmYXVsdEFyZ3MucHVzaCgnLS1sb2cnLCB0aGlzLmxvZ0xldmVsKTtcbiAgICB9XG4gIH1cbn1cblxuLy8gYWRkIGFsbCB0aGUgbWV0aG9kcyB0byB0aGUgSURCIHByb3RvdHlwZVxuZm9yIChjb25zdCBbZm5OYW1lLCBmbl0gb2YgXy50b1BhaXJzKG1ldGhvZHMpKSB7XG4gIElEQi5wcm90b3R5cGVbZm5OYW1lXSA9IGZuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBJREI7XG5leHBvcnQgeyBJREIgfTtcbiJdLCJmaWxlIjoibGliL2lkYi5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLiJ9
